"use strict";(self.webpackChunkastra_ui=self.webpackChunkastra_ui||[]).push([[8422],{"./lib/utils.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{cn:()=>cn});var clsx__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/.pnpm/clsx@2.1.1/node_modules/clsx/dist/clsx.mjs"),tailwind_merge__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/.pnpm/tailwind-merge@2.4.0/node_modules/tailwind-merge/dist/bundle-mjs.mjs");function cov_u35lfyphl(){var path="/Users/ahmadrafidev/Developer/side-projects/web/astra/lib/utils.ts",global=new Function("return this")(),gcv="__coverage__",coverage=global[gcv]||(global[gcv]={});coverage[path]&&"a28d0bcfef70a9d6da2156340ad3611c4f702a3d"===coverage[path].hash||(coverage[path]={path:"/Users/ahmadrafidev/Developer/side-projects/web/astra/lib/utils.ts",statementMap:{0:{start:{line:4,column:4},end:{line:4,column:33}}},fnMap:{0:{name:"cn",decl:{start:{line:3,column:16},end:{line:3,column:18}},loc:{start:{line:3,column:30},end:{line:5,column:1}},line:3}},branchMap:{},s:{0:0},f:{0:0},b:{},inputSourceMap:{version:3,sources:["/Users/ahmadrafidev/Developer/side-projects/web/astra/lib/utils.ts"],sourcesContent:['import { type ClassValue, clsx } from "clsx"\nimport { twMerge } from "tailwind-merge"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n'],names:["clsx","twMerge","cn","inputs"],mappings:"AAAA,SAA0BA,IAAI,QAAQ,OAAM;AAC5C,SAASC,OAAO,QAAQ,iBAAgB;AAExC,OAAO,SAASC,GAAG,GAAGC,MAAoB;IACxC,OAAOF,QAAQD,KAAKG;AACtB"},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"a28d0bcfef70a9d6da2156340ad3611c4f702a3d"});var actualCoverage=coverage[path];return cov_u35lfyphl=function(){return actualCoverage},actualCoverage}function cn(...inputs){return cov_u35lfyphl().f[0]++,cov_u35lfyphl().s[0]++,(0,tailwind_merge__WEBPACK_IMPORTED_MODULE_0__.QP)((0,clsx__WEBPACK_IMPORTED_MODULE_1__.$)(inputs))}cov_u35lfyphl()},"./stories/StatusDot.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{BusyDot:()=>BusyDot,IconStatus:()=>IconStatus,OfflineDot:()=>OfflineDot,OnlineDot:()=>OnlineDot,WithoutLabel:()=>WithoutLabel,__namedExportsOrder:()=>__namedExportsOrder,default:()=>StatusDot_stories});var jsx_runtime=__webpack_require__("./node_modules/.pnpm/next@14.2.5_@babel+core@7.24.9_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/react/jsx-runtime.js"),utils=(__webpack_require__("./node_modules/.pnpm/next@14.2.5_@babel+core@7.24.9_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/react/index.js"),__webpack_require__("./lib/utils.ts"));function cov_w9llslkjc(){var path="/Users/ahmadrafidev/Developer/side-projects/web/astra/components/StatusDot/StatusDot.tsx",global=new Function("return this")(),gcv="__coverage__",coverage=global[gcv]||(global[gcv]={});coverage[path]&&"e03ffcca849428f22fa559ffa152cab09c8a07c3"===coverage[path].hash||(coverage[path]={path:"/Users/ahmadrafidev/Developer/side-projects/web/astra/components/StatusDot/StatusDot.tsx",statementMap:{0:{start:{line:4,column:21},end:{line:8,column:1}},1:{start:{line:9,column:21},end:{line:13,column:1}},2:{start:{line:20,column:22},end:{line:37,column:1}},3:{start:{line:21,column:19},end:{line:21,column:42}},4:{start:{line:22,column:4},end:{line:36,column:7}},5:{start:{line:38,column:0},end:{line:38,column:36}}},fnMap:{0:{name:"(anonymous_0)",decl:{start:{line:20,column:22},end:{line:20,column:23}},loc:{start:{line:20,column:102},end:{line:37,column:1}},line:20}},branchMap:{0:{loc:{start:{line:20,column:33},end:{line:20,column:45}},type:"default-arg",locations:[{start:{line:20,column:40},end:{line:20,column:45}}],line:20},1:{loc:{start:{line:20,column:60},end:{line:20,column:76}},type:"default-arg",locations:[{start:{line:20,column:72},end:{line:20,column:76}}],line:20},2:{loc:{start:{line:21,column:19},end:{line:21,column:42}},type:"binary-expr",locations:[{start:{line:21,column:19},end:{line:21,column:34}},{start:{line:21,column:38},end:{line:21,column:42}}],line:21},3:{loc:{start:{line:26,column:97},end:{line:26,column:131}},type:"cond-expr",locations:[{start:{line:26,column:106},end:{line:26,column:108}},{start:{line:26,column:111},end:{line:26,column:131}}],line:26},4:{loc:{start:{line:28,column:30},end:{line:28,column:59}},type:"binary-expr",locations:[{start:{line:28,column:30},end:{line:28,column:35}},{start:{line:28,column:39},end:{line:28,column:59}}],line:28},5:{loc:{start:{line:29,column:26},end:{line:29,column:50}},type:"cond-expr",locations:[{start:{line:29,column:35},end:{line:29,column:39}},{start:{line:29,column:42},end:{line:29,column:50}}],line:29},6:{loc:{start:{line:31,column:12},end:{line:34,column:14}},type:"binary-expr",locations:[{start:{line:31,column:12},end:{line:31,column:21}},{start:{line:31,column:39},end:{line:34,column:14}}],line:31},7:{loc:{start:{line:33,column:26},end:{line:33,column:55}},type:"binary-expr",locations:[{start:{line:33,column:26},end:{line:33,column:31}},{start:{line:33,column:35},end:{line:33,column:55}}],line:33}},s:{0:0,1:0,2:0,3:0,4:0,5:0},f:{0:0},b:{0:[0],1:[0],2:[0,0],3:[0,0],4:[0,0],5:[0,0],6:[0,0],7:[0,0]},inputSourceMap:{version:3,sources:["/Users/ahmadrafidev/Developer/side-projects/web/astra/components/StatusDot/StatusDot.tsx"],sourcesContent:["import React from 'react';\nimport { cn } from 'lib/utils';\n\n/**\n * Props for the StatusDot component.\n * \n * @typedef {Object} StatusDotProps\n * @property {'online' | 'offline' | 'busy'} status - The status to be represented.\n * @property {'dot' | 'icon'} [type='dot'] - The type of status indicator, either a dot or an icon.\n * @property {React.ReactNode} [icon] - The icon to be displayed if type is 'icon'.\n * @property {string} [label] - Custom label for the status.\n * @property {boolean} [showLabel=true] - Whether to show the label next to the status indicator.\n * @property {string} [className] - Additional class names for custom styling.\n * @property {React.ReactNode} [children] - Content to be displayed inside the status indicator.\n */\nexport interface StatusDotProps {\n    status: 'online' | 'offline' | 'busy';\n    type?: 'dot' | 'icon';\n    icon?: React.ReactNode;\n    label?: string;\n    showLabel?: boolean;\n    className?: string;\n    children?: React.ReactNode;\n}\n\nconst statusColors = {\n    online: 'bg-green-500',\n    offline: 'bg-gray-500',\n    busy: 'bg-red-500',\n};\n\nconst statusLabels = {\n    online: 'Online',\n    offline: 'Offline',\n    busy: 'Busy',\n};\n\n/**\n * StatusDot component for displaying a status indicator.\n * \n * @component\n * @param {StatusDotProps} props - Props for the StatusDot component.\n * @returns {JSX.Element} The rendered StatusDot component.\n */\nconst StatusDot: React.FC<StatusDotProps> = ({\n    status,\n    type = 'dot',\n    icon,\n    label,\n    showLabel = true,\n    className,\n    children,\n}) => {\n\n    const isIcon = type === 'icon' && icon;\n\n    return (\n        <div className=\"flex items-center space-x-2\">\n            <span\n                className={cn(\n                    'inline-flex items-center justify-center rounded-full text-white',\n                    isIcon ? '' : statusColors[status],\n                    className\n                )}\n                role=\"status\"\n                aria-label={label || statusLabels[status]}\n            >\n                {isIcon ? icon : children}\n            </span>\n            {showLabel && <p className=\"text-gray-900 dark:text-gray-50 font-normal font-sans text-base\">{label || statusLabels[status]}</p>}\n        </div>\n    );\n};\n\nStatusDot.displayName = \"StatusDot\";\nexport default StatusDot;\n"],names:["React","cn","statusColors","online","offline","busy","statusLabels","StatusDot","status","type","icon","label","showLabel","className","children","isIcon","div","span","role","aria-label","p","displayName"],mappings:";AAAA,OAAOA,WAAW,QAAQ;AAC1B,SAASC,EAAE,QAAQ,YAAY;AAwB/B,MAAMC,eAAe;IACjBC,QAAQ;IACRC,SAAS;IACTC,MAAM;AACV;AAEA,MAAMC,eAAe;IACjBH,QAAQ;IACRC,SAAS;IACTC,MAAM;AACV;AAEA;;;;;;CAMC,GACD,MAAME,YAAsC,CAAC,EACzCC,MAAM,EACNC,OAAO,KAAK,EACZC,IAAI,EACJC,KAAK,EACLC,YAAY,IAAI,EAChBC,SAAS,EACTC,QAAQ,EACX;IAEG,MAAMC,SAASN,SAAS,UAAUC;IAElC,qBACI,MAACM;QAAIH,WAAU;;0BACX,KAACI;gBACGJ,WAAWZ,GACP,mEACAc,SAAS,KAAKb,YAAY,CAACM,OAAO,EAClCK;gBAEJK,MAAK;gBACLC,cAAYR,SAASL,YAAY,CAACE,OAAO;0BAExCO,SAASL,OAAOI;;YAEpBF,2BAAa,KAACQ;gBAAEP,WAAU;0BAAmEF,SAASL,YAAY,CAACE,OAAO;;;;AAGvI;AAEAD,UAAUc,WAAW,GAAG;AACxB,eAAed,UAAU"},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"e03ffcca849428f22fa559ffa152cab09c8a07c3"});var actualCoverage=coverage[path];return cov_w9llslkjc=function(){return actualCoverage},actualCoverage}cov_w9llslkjc();const statusColors=(cov_w9llslkjc().s[0]++,{online:"bg-green-500",offline:"bg-gray-500",busy:"bg-red-500"}),statusLabels=(cov_w9llslkjc().s[1]++,{online:"Online",offline:"Offline",busy:"Busy"});cov_w9llslkjc().s[2]++;const StatusDot=({status,type=(cov_w9llslkjc().b[0][0]++,"dot"),icon,label,showLabel=(cov_w9llslkjc().b[1][0]++,!0),className,children})=>{cov_w9llslkjc().f[0]++;const isIcon=(cov_w9llslkjc().s[3]++,cov_w9llslkjc().b[2][0]++,"icon"===type&&(cov_w9llslkjc().b[2][1]++,icon));return cov_w9llslkjc().s[4]++,(0,jsx_runtime.jsxs)("div",{className:"flex items-center space-x-2",children:[(0,jsx_runtime.jsx)("span",{className:(0,utils.cn)("inline-flex items-center justify-center rounded-full text-white",isIcon?(cov_w9llslkjc().b[3][0]++,""):(cov_w9llslkjc().b[3][1]++,statusColors[status]),className),role:"status","aria-label":(cov_w9llslkjc().b[4][0]++,label||(cov_w9llslkjc().b[4][1]++,statusLabels[status])),children:isIcon?(cov_w9llslkjc().b[5][0]++,icon):(cov_w9llslkjc().b[5][1]++,children)}),(cov_w9llslkjc().b[6][0]++,showLabel&&(cov_w9llslkjc().b[6][1]++,(0,jsx_runtime.jsx)("p",{className:"text-gray-900 dark:text-gray-50 font-normal font-sans text-base",children:(cov_w9llslkjc().b[7][0]++,label||(cov_w9llslkjc().b[7][1]++,statusLabels[status]))})))]})};cov_w9llslkjc().s[5]++,StatusDot.displayName="StatusDot";const StatusDot_StatusDot=StatusDot;try{StatusDot.displayName="StatusDot",StatusDot.__docgenInfo={description:"StatusDot component for displaying a status indicator.",displayName:"StatusDot",props:{status:{defaultValue:null,description:"",name:"status",required:!0,type:{name:"enum",value:[{value:'"online"'},{value:'"offline"'},{value:'"busy"'}]}},type:{defaultValue:{value:"dot"},description:"",name:"type",required:!1,type:{name:"enum",value:[{value:'"icon"'},{value:'"dot"'}]}},icon:{defaultValue:null,description:"",name:"icon",required:!1,type:{name:"ReactNode"}},label:{defaultValue:null,description:"",name:"label",required:!1,type:{name:"string"}},showLabel:{defaultValue:{value:"true"},description:"",name:"showLabel",required:!1,type:{name:"boolean"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["components/StatusDot/StatusDot.tsx#StatusDot"]={docgenInfo:StatusDot.__docgenInfo,name:"StatusDot",path:"components/StatusDot/StatusDot.tsx#StatusDot"})}catch(__react_docgen_typescript_loader_error){}const StatusDot_stories={title:"Components/StatusDot",component:StatusDot_StatusDot,argTypes:{status:{control:{type:"select",options:["online","offline","busy"]},description:"The status to be represented.",table:{type:{summary:"'online' | 'offline' | 'busy'"}}},type:{control:{type:"select",options:["dot","icon"]},description:"The type of status indicator, either a dot or an icon.",table:{type:{summary:"'dot' | 'icon'"},defaultValue:{summary:"dot"}}},icon:{control:"text",description:"The icon to be displayed if type is 'icon'.",table:{type:{summary:"React.ReactNode"}}},label:{control:"text",description:"Custom label for the status.",table:{type:{summary:"string"}}},showLabel:{control:"boolean",description:"Whether to show the label next to the status indicator.",table:{type:{summary:"boolean"},defaultValue:{summary:"true"}}},className:{control:"text",description:"Additional class names for custom styling.",table:{type:{summary:"string"}}},children:{control:"text",description:"Content to be displayed inside the status indicator.",table:{type:{summary:"React.ReactNode"}}}}},Template=args=>(0,jsx_runtime.jsx)(StatusDot_StatusDot,{...args}),OnlineDot=Template.bind({});OnlineDot.args={status:"online",label:"Online",type:"dot"};const OfflineDot=Template.bind({});OfflineDot.args={status:"offline",label:"Offline",type:"dot"};const BusyDot=Template.bind({});BusyDot.args={status:"busy",label:"Busy",type:"dot"};const IconStatus=Template.bind({});IconStatus.args={status:"online",type:"icon",icon:(0,jsx_runtime.jsx)("svg",{xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24",strokeWidth:"2",stroke:"currentColor",className:"w-4 h-4",children:(0,jsx_runtime.jsx)("path",{strokeLinecap:"round",strokeLinejoin:"round",d:"M5 13l4 4L19 7"})}),label:"Available"};const WithoutLabel=Template.bind({});WithoutLabel.args={status:"online",type:"dot",showLabel:!1};const __namedExportsOrder=["OnlineDot","OfflineDot","BusyDot","IconStatus","WithoutLabel"];OnlineDot.parameters={...OnlineDot.parameters,docs:{...OnlineDot.parameters?.docs,source:{originalSource:"args => <StatusDot {...args} />",...OnlineDot.parameters?.docs?.source}}},OfflineDot.parameters={...OfflineDot.parameters,docs:{...OfflineDot.parameters?.docs,source:{originalSource:"args => <StatusDot {...args} />",...OfflineDot.parameters?.docs?.source}}},BusyDot.parameters={...BusyDot.parameters,docs:{...BusyDot.parameters?.docs,source:{originalSource:"args => <StatusDot {...args} />",...BusyDot.parameters?.docs?.source}}},IconStatus.parameters={...IconStatus.parameters,docs:{...IconStatus.parameters?.docs,source:{originalSource:"args => <StatusDot {...args} />",...IconStatus.parameters?.docs?.source}}},WithoutLabel.parameters={...WithoutLabel.parameters,docs:{...WithoutLabel.parameters?.docs,source:{originalSource:"args => <StatusDot {...args} />",...WithoutLabel.parameters?.docs?.source}}}}}]);
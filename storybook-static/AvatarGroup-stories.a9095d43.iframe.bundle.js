"use strict";(self.webpackChunkastra_ui=self.webpackChunkastra_ui||[]).push([[4817],{"./components/Avatar/Avatar.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/.pnpm/next@14.2.5_@babel+core@7.24.9_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/react/jsx-runtime.js"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/.pnpm/next@14.2.5_@babel+core@7.24.9_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/react/index.js"),next_image__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/.pnpm/@storybook+nextjs@8.2.9_@jest+globals@29.7.0_@swc+core@1.7.0_@swc+helpers@0.5.12__esbuild@0.2_qymmzeda73jyavinpxnsstetgi/node_modules/@storybook/nextjs/dist/images/next-image.mjs");function cov_xjxbriqa(){var path="/Users/ahmadrafidev/Developer/side-projects/web/astra/components/Avatar/Avatar.tsx",global=new Function("return this")(),gcv="__coverage__",coverageData={path:"/Users/ahmadrafidev/Developer/side-projects/web/astra/components/Avatar/Avatar.tsx",statementMap:{0:{start:{line:4,column:16},end:{line:8,column:1}},1:{start:{line:15,column:19},end:{line:46,column:1}},2:{start:{line:16,column:30},end:{line:16,column:51}},3:{start:{line:17,column:24},end:{line:19,column:5}},4:{start:{line:18,column:8},end:{line:18,column:23}},5:{start:{line:20,column:26},end:{line:20,column:73}},6:{start:{line:21,column:23},end:{line:21,column:73}},7:{start:{line:22,column:4},end:{line:34,column:5}},8:{start:{line:23,column:8},end:{line:33,column:11}},9:{start:{line:35,column:4},end:{line:45,column:7}},10:{start:{line:47,column:0},end:{line:47,column:30}}},fnMap:{0:{name:"(anonymous_0)",decl:{start:{line:15,column:19},end:{line:15,column:20}},loc:{start:{line:15,column:112},end:{line:46,column:1}},line:15},1:{name:"(anonymous_1)",decl:{start:{line:17,column:24},end:{line:17,column:25}},loc:{start:{line:17,column:28},end:{line:19,column:5}},line:17}},branchMap:{0:{loc:{start:{line:15,column:27},end:{line:15,column:41}},type:"default-arg",locations:[{start:{line:15,column:33},end:{line:15,column:41}}],line:15},1:{loc:{start:{line:15,column:43},end:{line:15,column:54}},type:"default-arg",locations:[{start:{line:15,column:50},end:{line:15,column:54}}],line:15},2:{loc:{start:{line:15,column:56},end:{line:15,column:72}},type:"default-arg",locations:[{start:{line:15,column:64},end:{line:15,column:72}}],line:15},3:{loc:{start:{line:15,column:84},end:{line:15,column:98}},type:"default-arg",locations:[{start:{line:15,column:96},end:{line:15,column:98}}],line:15},4:{loc:{start:{line:20,column:26},end:{line:20,column:73}},type:"cond-expr",locations:[{start:{line:20,column:53},end:{line:20,column:57}},{start:{line:20,column:60},end:{line:20,column:73}}],line:20},5:{loc:{start:{line:21,column:23},end:{line:21,column:73}},type:"cond-expr",locations:[{start:{line:21,column:44},end:{line:21,column:58}},{start:{line:21,column:61},end:{line:21,column:73}}],line:21},6:{loc:{start:{line:22,column:4},end:{line:34,column:5}},type:"if",locations:[{start:{line:22,column:4},end:{line:34,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:22},7:{loc:{start:{line:22,column:8},end:{line:22,column:25}},type:"binary-expr",locations:[{start:{line:22,column:8},end:{line:22,column:13}},{start:{line:22,column:17},end:{line:22,column:25}}],line:22},8:{loc:{start:{line:30,column:18},end:{line:30,column:48}},type:"cond-expr",locations:[{start:{line:30,column:28},end:{line:30,column:36}},{start:{line:30,column:39},end:{line:30,column:48}}],line:30},9:{loc:{start:{line:31,column:22},end:{line:31,column:45}},type:"cond-expr",locations:[{start:{line:31,column:32},end:{line:31,column:33}},{start:{line:31,column:36},end:{line:31,column:45}}],line:31},10:{loc:{start:{line:43,column:14},end:{line:43,column:44}},type:"cond-expr",locations:[{start:{line:43,column:24},end:{line:43,column:32}},{start:{line:43,column:35},end:{line:43,column:44}}],line:43},11:{loc:{start:{line:44,column:18},end:{line:44,column:41}},type:"cond-expr",locations:[{start:{line:44,column:28},end:{line:44,column:29}},{start:{line:44,column:32},end:{line:44,column:41}}],line:44}},s:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0},f:{0:0,1:0},b:{0:[0],1:[0],2:[0],3:[0],4:[0,0],5:[0,0],6:[0,0],7:[0,0],8:[0,0],9:[0,0],10:[0,0],11:[0,0]},inputSourceMap:{version:3,sources:["/Users/ahmadrafidev/Developer/side-projects/web/astra/components/Avatar/Avatar.tsx"],sourcesContent:["import React from 'react';\nimport Image from 'next/image';\n\n/**\n * Props for the Avatar component.\n * \n * @typedef {Object} AvatarProps\n * @property {string} src - The source URL of the avatar image.\n * @property {string} [alt='Avatar'] - The alt text for the avatar image.\n * @property {'sm' | 'md' | 'lg' | number} [size='md'] - The size of the avatar. Can be a preset size or a custom number.\n * @property {'circle' | 'square'} [shape='circle'] - The shape of the avatar.\n * @property {React.ReactNode} [fallback] - Fallback content to display if the image fails to load.\n * @property {string} [className] - Additional class names for custom styling.\n * @property {() => void} [onClick] - Click event handler for the avatar.\n */\nexport interface AvatarProps {\n  src: string;\n  alt?: string;\n  size?: 'sm' | 'md' | 'lg' | number;\n  shape?: 'circle' | 'square';\n  fallback?: React.ReactNode;\n  className?: string;\n  onClick?: () => void;\n}\n\nconst sizeMap = {\n  sm: 30,\n  md: 36,\n  lg: 42,\n};\n\n/**\n * Avatar component for displaying user profile images.\n * \n * @component\n * @param {AvatarProps} props - Props for the Avatar component.\n * @returns {JSX.Element} The rendered Avatar component.\n */\nconst Avatar: React.FC<AvatarProps> = ({\n  src,\n  alt = 'Avatar',\n  size = 'md',\n  shape = 'circle',\n  fallback,\n  className = '',\n  onClick,\n}) => {\n  const [error, setError] = React.useState(false);\n\n  const handleError = () => {\n    setError(true);\n  };\n\n  const dimensionSize = typeof size === 'number' ? size : sizeMap[size];\n\n  const shapeClass = shape === 'circle' ? 'rounded-full' : 'rounded-lg';\n\n  if (error && fallback) {\n    return (\n      <div\n        className={`inline-flex items-center justify-center bg-gray-200 ${shapeClass} ${className}`}\n        style={{ width: dimensionSize, height: dimensionSize }}\n        onClick={onClick}\n        role={onClick ? 'button' : undefined}\n        tabIndex={onClick ? 0 : undefined}\n      >\n        {fallback}\n      </div>\n    );\n  }\n\n  return (\n    <Image\n      src={src}\n      alt={alt}\n      width={dimensionSize}\n      height={dimensionSize}\n      className={`inline-block ${shapeClass} ${className}`}\n      onError={handleError}\n      onClick={onClick}\n      role={onClick ? 'button' : undefined}\n      tabIndex={onClick ? 0 : undefined}\n    />\n  );\n};\n\nAvatar.displayName = \"Avatar\";\nexport default Avatar;\n"],names:["React","Image","sizeMap","sm","md","lg","Avatar","src","alt","size","shape","fallback","className","onClick","error","setError","useState","handleError","dimensionSize","shapeClass","div","style","width","height","role","undefined","tabIndex","onError","displayName"],mappings:";AAAA,OAAOA,WAAW,QAAQ;AAC1B,OAAOC,WAAW,aAAa;AAwB/B,MAAMC,UAAU;IACdC,IAAI;IACJC,IAAI;IACJC,IAAI;AACN;AAEA;;;;;;CAMC,GACD,MAAMC,SAAgC,CAAC,EACrCC,GAAG,EACHC,MAAM,QAAQ,EACdC,OAAO,IAAI,EACXC,QAAQ,QAAQ,EAChBC,QAAQ,EACRC,YAAY,EAAE,EACdC,OAAO,EACR;IACC,MAAM,CAACC,OAAOC,SAAS,GAAGf,MAAMgB,QAAQ,CAAC;IAEzC,MAAMC,cAAc;QAClBF,SAAS;IACX;IAEA,MAAMG,gBAAgB,OAAOT,SAAS,WAAWA,OAAOP,OAAO,CAACO,KAAK;IAErE,MAAMU,aAAaT,UAAU,WAAW,iBAAiB;IAEzD,IAAII,SAASH,UAAU;QACrB,qBACE,KAACS;YACCR,WAAW,CAAC,oDAAoD,EAAEO,WAAW,CAAC,EAAEP,UAAU,CAAC;YAC3FS,OAAO;gBAAEC,OAAOJ;gBAAeK,QAAQL;YAAc;YACrDL,SAASA;YACTW,MAAMX,UAAU,WAAWY;YAC3BC,UAAUb,UAAU,IAAIY;sBAEvBd;;IAGP;IAEA,qBACE,KAACV;QACCM,KAAKA;QACLC,KAAKA;QACLc,OAAOJ;QACPK,QAAQL;QACRN,WAAW,CAAC,aAAa,EAAEO,WAAW,CAAC,EAAEP,UAAU,CAAC;QACpDe,SAASV;QACTJ,SAASA;QACTW,MAAMX,UAAU,WAAWY;QAC3BC,UAAUb,UAAU,IAAIY;;AAG9B;AAEAnB,OAAOsB,WAAW,GAAG;AACrB,eAAetB,OAAO"},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"ff6e196a1c9c740562c6333effe60a04326c2b1a"},coverage=global[gcv]||(global[gcv]={});coverage[path]&&"ff6e196a1c9c740562c6333effe60a04326c2b1a"===coverage[path].hash||(coverage[path]=coverageData);var actualCoverage=coverage[path];return cov_xjxbriqa=function(){return actualCoverage},actualCoverage}cov_xjxbriqa();const sizeMap=(cov_xjxbriqa().s[0]++,{sm:30,md:36,lg:42});cov_xjxbriqa().s[1]++;const Avatar=({src,alt=(cov_xjxbriqa().b[0][0]++,"Avatar"),size=(cov_xjxbriqa().b[1][0]++,"md"),shape=(cov_xjxbriqa().b[2][0]++,"circle"),fallback,className=(cov_xjxbriqa().b[3][0]++,""),onClick})=>{cov_xjxbriqa().f[0]++;const[error,setError]=(cov_xjxbriqa().s[2]++,react__WEBPACK_IMPORTED_MODULE_1__.useState(!1));cov_xjxbriqa().s[3]++;const dimensionSize=(cov_xjxbriqa().s[5]++,"number"==typeof size?(cov_xjxbriqa().b[4][0]++,size):(cov_xjxbriqa().b[4][1]++,sizeMap[size])),shapeClass=(cov_xjxbriqa().s[6]++,"circle"===shape?(cov_xjxbriqa().b[5][0]++,"rounded-full"):(cov_xjxbriqa().b[5][1]++,"rounded-lg"));return cov_xjxbriqa().s[7]++,cov_xjxbriqa().b[7][0]++,error&&(cov_xjxbriqa().b[7][1]++,fallback)?(cov_xjxbriqa().b[6][0]++,cov_xjxbriqa().s[8]++,(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:`inline-flex items-center justify-center bg-gray-200 ${shapeClass} ${className}`,style:{width:dimensionSize,height:dimensionSize},onClick,role:onClick?(cov_xjxbriqa().b[8][0]++,"button"):void cov_xjxbriqa().b[8][1]++,tabIndex:onClick?(cov_xjxbriqa().b[9][0]++,0):void cov_xjxbriqa().b[9][1]++,children:fallback})):(cov_xjxbriqa().b[6][1]++,cov_xjxbriqa().s[9]++,(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(next_image__WEBPACK_IMPORTED_MODULE_2__.A,{src,alt,width:dimensionSize,height:dimensionSize,className:`inline-block ${shapeClass} ${className}`,onError:()=>{cov_xjxbriqa().f[1]++,cov_xjxbriqa().s[4]++,setError(!0)},onClick,role:onClick?(cov_xjxbriqa().b[10][0]++,"button"):void cov_xjxbriqa().b[10][1]++,tabIndex:onClick?(cov_xjxbriqa().b[11][0]++,0):void cov_xjxbriqa().b[11][1]++}))};cov_xjxbriqa().s[10]++,Avatar.displayName="Avatar";const __WEBPACK_DEFAULT_EXPORT__=Avatar;try{Avatar.displayName="Avatar",Avatar.__docgenInfo={description:"Avatar component for displaying user profile images.",displayName:"Avatar",props:{src:{defaultValue:null,description:"",name:"src",required:!0,type:{name:"string"}},alt:{defaultValue:{value:"Avatar"},description:"",name:"alt",required:!1,type:{name:"string"}},size:{defaultValue:{value:"md"},description:"",name:"size",required:!1,type:{name:'number | "sm" | "md" | "lg"'}},shape:{defaultValue:{value:"circle"},description:"",name:"shape",required:!1,type:{name:"enum",value:[{value:'"circle"'},{value:'"square"'}]}},fallback:{defaultValue:null,description:"",name:"fallback",required:!1,type:{name:"ReactNode"}},className:{defaultValue:{value:""},description:"",name:"className",required:!1,type:{name:"string"}},onClick:{defaultValue:null,description:"",name:"onClick",required:!1,type:{name:"(() => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["components/Avatar/Avatar.tsx#Avatar"]={docgenInfo:Avatar.__docgenInfo,name:"Avatar",path:"components/Avatar/Avatar.tsx#Avatar"})}catch(__react_docgen_typescript_loader_error){}},"./stories/AvatarGroup.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CustomClassName:()=>CustomClassName,Default:()=>Default,LargeAvatars:()=>LargeAvatars,SquareAvatars:()=>SquareAvatars,__namedExportsOrder:()=>__namedExportsOrder,default:()=>AvatarGroup_stories});var jsx_runtime=__webpack_require__("./node_modules/.pnpm/next@14.2.5_@babel+core@7.24.9_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/react/jsx-runtime.js"),Avatar=(__webpack_require__("./node_modules/.pnpm/next@14.2.5_@babel+core@7.24.9_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/react/index.js"),__webpack_require__("./components/Avatar/Avatar.tsx"));function cov_1alxhus558(){var path="/Users/ahmadrafidev/Developer/side-projects/web/astra/components/AvatarGroup/AvatarGroup.tsx",global=new Function("return this")(),gcv="__coverage__",coverage=global[gcv]||(global[gcv]={});coverage[path]&&"bc9550e3baf6bb92cc456ac6d50271ca4df46921"===coverage[path].hash||(coverage[path]={path:"/Users/ahmadrafidev/Developer/side-projects/web/astra/components/AvatarGroup/AvatarGroup.tsx",statementMap:{0:{start:{line:4,column:23},end:{line:8,column:1}},1:{start:{line:15,column:24},end:{line:51,column:1}},2:{start:{line:16,column:27},end:{line:16,column:48}},3:{start:{line:17,column:27},end:{line:17,column:47}},4:{start:{line:18,column:4},end:{line:50,column:7}},5:{start:{line:21,column:62},end:{line:29,column:25}},6:{start:{line:52,column:0},end:{line:52,column:40}}},fnMap:{0:{name:"(anonymous_0)",decl:{start:{line:15,column:24},end:{line:15,column:25}},loc:{start:{line:15,column:111},end:{line:51,column:1}},line:15},1:{name:"(anonymous_1)",decl:{start:{line:21,column:31},end:{line:21,column:32}},loc:{start:{line:21,column:62},end:{line:29,column:25}},line:21}},branchMap:{0:{loc:{start:{line:15,column:36},end:{line:15,column:43}},type:"default-arg",locations:[{start:{line:15,column:42},end:{line:15,column:43}}],line:15},1:{loc:{start:{line:15,column:45},end:{line:15,column:56}},type:"default-arg",locations:[{start:{line:15,column:52},end:{line:15,column:56}}],line:15},2:{loc:{start:{line:15,column:58},end:{line:15,column:74}},type:"default-arg",locations:[{start:{line:15,column:66},end:{line:15,column:74}}],line:15},3:{loc:{start:{line:15,column:76},end:{line:15,column:90}},type:"default-arg",locations:[{start:{line:15,column:86},end:{line:15,column:90}}],line:15},4:{loc:{start:{line:15,column:92},end:{line:15,column:106}},type:"default-arg",locations:[{start:{line:15,column:104},end:{line:15,column:106}}],line:15},5:{loc:{start:{line:27,column:65},end:{line:27,column:87}},type:"binary-expr",locations:[{start:{line:27,column:65},end:{line:27,column:81}},{start:{line:27,column:85},end:{line:27,column:87}}],line:27},6:{loc:{start:{line:30,column:12},end:{line:48,column:14}},type:"binary-expr",locations:[{start:{line:30,column:12},end:{line:30,column:30}},{start:{line:30,column:48},end:{line:48,column:14}}],line:30},7:{loc:{start:{line:35,column:14},end:{line:35,column:64}},type:"cond-expr",locations:[{start:{line:35,column:35},end:{line:35,column:49}},{start:{line:35,column:52},end:{line:35,column:64}}],line:35},8:{loc:{start:{line:38,column:27},end:{line:38,column:70}},type:"cond-expr",locations:[{start:{line:38,column:54},end:{line:38,column:58}},{start:{line:38,column:61},end:{line:38,column:70}}],line:38},9:{loc:{start:{line:39,column:28},end:{line:39,column:71}},type:"cond-expr",locations:[{start:{line:39,column:55},end:{line:39,column:59}},{start:{line:39,column:62},end:{line:39,column:71}}],line:39}},s:{0:0,1:0,2:0,3:0,4:0,5:0,6:0},f:{0:0,1:0},b:{0:[0],1:[0],2:[0],3:[0],4:[0],5:[0,0],6:[0,0],7:[0,0],8:[0,0],9:[0,0]},inputSourceMap:{version:3,sources:["/Users/ahmadrafidev/Developer/side-projects/web/astra/components/AvatarGroup/AvatarGroup.tsx"],sourcesContent:["import React from 'react';\nimport Avatar, { AvatarProps } from '../Avatar/Avatar';\n\n/**\n * Props for the AvatarGroup component.\n * \n * @typedef {Object} AvatarGroupProps\n * @property {AvatarProps[]} avatars - Array of avatar props to render.\n * @property {number} [max=3] - Maximum number of avatars to display.\n * @property {AvatarProps['size']} [size='md'] - Size of the avatars.\n * @property {AvatarProps['shape']} [shape='circle'] - Shape of the avatars.\n * @property {'sm' | 'md' | 'lg'} [overlap='md'] - Overlap size for the avatars.\n * @property {string} [className] - Additional class names for custom styling.\n */\nexport interface AvatarGroupProps {\n  avatars: AvatarProps[];\n  max?: number;\n  size?: AvatarProps['size'];\n  shape?: AvatarProps['shape'];\n  overlap?: 'sm' | 'md' | 'lg';\n  className?: string;\n}\n\nconst overlapClasses = {\n  sm: '-space-x-1',\n  md: '-space-x-2',\n  lg: '-space-x-3',\n};\n\n/**\n * AvatarGroup component for displaying a group of avatars with overlap.\n * \n * @component\n * @param {AvatarGroupProps} props - Props for the AvatarGroup component.\n * @returns {JSX.Element} The rendered AvatarGroup component.\n */\nconst AvatarGroup: React.FC<AvatarGroupProps> = ({\n  avatars,\n  max = 3,\n  size = 'md',\n  shape = 'circle',\n  overlap = 'md',\n  className = '',\n}) => {\n  const visibleAvatars = avatars.slice(0, max);\n  const remainingCount = avatars.length - max;\n\n  return (\n    <div className={`flex ${overlapClasses[overlap]} ${className}`}>\n      {visibleAvatars.map((avatar, index) => (\n        <div key={index} className=\"transition-transform hover:scale-110 focus-within:scale-110\">\n          <Avatar\n            {...avatar}\n            size={size}\n            shape={shape}\n            className={`border-2 border-background ${avatar.className || ''}`}\n          />\n        </div>\n      ))}\n      {remainingCount > 0 && (\n        <div \n          className={`\n            flex items-center justify-center bg-gray-200 dark:bg-gray-700\n            border-2 border-background\n            transition-transform hover:scale-110 focus-within:scale-110\n            ${shape === 'circle' ? 'rounded-full' : 'rounded-md'}\n          `}\n          style={{\n            width: typeof size === 'number' ? size : undefined,\n            height: typeof size === 'number' ? size : undefined\n          }}\n        >\n          <span className=\"text-xs font-medium\">+{remainingCount}</span>\n        </div>\n      )}\n    </div>\n  );\n};\n\nAvatarGroup.displayName = \"AvatarGroup\";\nexport default AvatarGroup;\n"],names:["React","Avatar","overlapClasses","sm","md","lg","AvatarGroup","avatars","max","size","shape","overlap","className","visibleAvatars","slice","remainingCount","length","div","map","avatar","index","style","width","undefined","height","span","displayName"],mappings:";AAAA,OAAOA,WAAW,QAAQ;AAC1B,OAAOC,YAA6B,mBAAmB;AAsBvD,MAAMC,iBAAiB;IACrBC,IAAI;IACJC,IAAI;IACJC,IAAI;AACN;AAEA;;;;;;CAMC,GACD,MAAMC,cAA0C,CAAC,EAC/CC,OAAO,EACPC,MAAM,CAAC,EACPC,OAAO,IAAI,EACXC,QAAQ,QAAQ,EAChBC,UAAU,IAAI,EACdC,YAAY,EAAE,EACf;IACC,MAAMC,iBAAiBN,QAAQO,KAAK,CAAC,GAAGN;IACxC,MAAMO,iBAAiBR,QAAQS,MAAM,GAAGR;IAExC,qBACE,MAACS;QAAIL,WAAW,CAAC,KAAK,EAAEV,cAAc,CAACS,QAAQ,CAAC,CAAC,EAAEC,UAAU,CAAC;;YAC3DC,eAAeK,GAAG,CAAC,CAACC,QAAQC,sBAC3B,KAACH;oBAAgBL,WAAU;8BACzB,cAAA,KAACX;wBACE,GAAGkB,MAAM;wBACVV,MAAMA;wBACNC,OAAOA;wBACPE,WAAW,CAAC,2BAA2B,EAAEO,OAAOP,SAAS,IAAI,GAAG,CAAC;;mBAL3DQ;YASXL,iBAAiB,mBAChB,KAACE;gBACCL,WAAW,CAAC;;;;YAIV,EAAEF,UAAU,WAAW,iBAAiB,aAAa;UACvD,CAAC;gBACDW,OAAO;oBACLC,OAAO,OAAOb,SAAS,WAAWA,OAAOc;oBACzCC,QAAQ,OAAOf,SAAS,WAAWA,OAAOc;gBAC5C;0BAEA,cAAA,MAACE;oBAAKb,WAAU;;wBAAsB;wBAAEG;;;;;;AAKlD;AAEAT,YAAYoB,WAAW,GAAG;AAC1B,eAAepB,YAAY"},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"bc9550e3baf6bb92cc456ac6d50271ca4df46921"});var actualCoverage=coverage[path];return cov_1alxhus558=function(){return actualCoverage},actualCoverage}cov_1alxhus558();const overlapClasses=(cov_1alxhus558().s[0]++,{sm:"-space-x-1",md:"-space-x-2",lg:"-space-x-3"});cov_1alxhus558().s[1]++;const AvatarGroup=({avatars,max=(cov_1alxhus558().b[0][0]++,3),size=(cov_1alxhus558().b[1][0]++,"md"),shape=(cov_1alxhus558().b[2][0]++,"circle"),overlap=(cov_1alxhus558().b[3][0]++,"md"),className=(cov_1alxhus558().b[4][0]++,"")})=>{cov_1alxhus558().f[0]++;const visibleAvatars=(cov_1alxhus558().s[2]++,avatars.slice(0,max)),remainingCount=(cov_1alxhus558().s[3]++,avatars.length-max);return cov_1alxhus558().s[4]++,(0,jsx_runtime.jsxs)("div",{className:`flex ${overlapClasses[overlap]} ${className}`,children:[visibleAvatars.map(((avatar,index)=>(cov_1alxhus558().f[1]++,cov_1alxhus558().s[5]++,(0,jsx_runtime.jsx)("div",{className:"transition-transform hover:scale-110 focus-within:scale-110",children:(0,jsx_runtime.jsx)(Avatar.A,{...avatar,size,shape,className:`border-2 border-background ${cov_1alxhus558().b[5][0]++,avatar.className||(cov_1alxhus558().b[5][1]++,"")}`})},index)))),(cov_1alxhus558().b[6][0]++,remainingCount>0&&(cov_1alxhus558().b[6][1]++,(0,jsx_runtime.jsx)("div",{className:`\n            flex items-center justify-center bg-gray-200 dark:bg-gray-700\n            border-2 border-background\n            transition-transform hover:scale-110 focus-within:scale-110\n            ${"circle"===shape?(cov_1alxhus558().b[7][0]++,"rounded-full"):(cov_1alxhus558().b[7][1]++,"rounded-md")}\n          `,style:{width:"number"==typeof size?(cov_1alxhus558().b[8][0]++,size):void cov_1alxhus558().b[8][1]++,height:"number"==typeof size?(cov_1alxhus558().b[9][0]++,size):void cov_1alxhus558().b[9][1]++},children:(0,jsx_runtime.jsxs)("span",{className:"text-xs font-medium",children:["+",remainingCount]})})))]})};cov_1alxhus558().s[6]++,AvatarGroup.displayName="AvatarGroup";const AvatarGroup_AvatarGroup=AvatarGroup;try{AvatarGroup.displayName="AvatarGroup",AvatarGroup.__docgenInfo={description:"AvatarGroup component for displaying a group of avatars with overlap.",displayName:"AvatarGroup",props:{avatars:{defaultValue:null,description:"",name:"avatars",required:!0,type:{name:"AvatarProps[]"}},max:{defaultValue:{value:"3"},description:"",name:"max",required:!1,type:{name:"number"}},size:{defaultValue:{value:"md"},description:"",name:"size",required:!1,type:{name:'number | "sm" | "md" | "lg"'}},shape:{defaultValue:{value:"circle"},description:"",name:"shape",required:!1,type:{name:"enum",value:[{value:'"circle"'},{value:'"square"'}]}},overlap:{defaultValue:{value:"md"},description:"",name:"overlap",required:!1,type:{name:"enum",value:[{value:'"sm"'},{value:'"md"'},{value:'"lg"'}]}},className:{defaultValue:{value:""},description:"",name:"className",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["components/AvatarGroup/AvatarGroup.tsx#AvatarGroup"]={docgenInfo:AvatarGroup.__docgenInfo,name:"AvatarGroup",path:"components/AvatarGroup/AvatarGroup.tsx#AvatarGroup"})}catch(__react_docgen_typescript_loader_error){}const AvatarGroup_stories={title:"Components/AvatarGroup",component:AvatarGroup_AvatarGroup,argTypes:{avatars:{control:"object",description:"Array of avatar props to render.",table:{type:{summary:"AvatarProps[]"}}},max:{control:{type:"number",min:1},description:"Maximum number of avatars to display.",table:{type:{summary:"number"},defaultValue:{summary:"3"}}},size:{control:{type:"select",options:["sm","md","lg",30,36,42,100]},description:"Size of the avatars.",table:{type:{summary:'AvatarProps["size"]'},defaultValue:{summary:"md"}}},shape:{control:{type:"select",options:["circle","square"]},description:"Shape of the avatars.",table:{type:{summary:'AvatarProps["shape"]'},defaultValue:{summary:"circle"}}},overlap:{control:{type:"select",options:["sm","md","lg"]},description:"Overlap size for the avatars.",table:{type:{summary:"'sm' | 'md' | 'lg'"},defaultValue:{summary:"md"}}},className:{control:"text",description:"Additional class names for custom styling.",table:{type:{summary:"string"}}}},parameters:{docs:{description:{component:"The AvatarGroup component is used to display a group of avatars with overlap and an optional count of additional avatars."}}}},Template=args=>(0,jsx_runtime.jsx)(AvatarGroup_AvatarGroup,{...args}),Default=Template.bind({});Default.args={avatars:[{src:"https://via.placeholder.com/40"},{src:"https://via.placeholder.com/40"},{src:"https://via.placeholder.com/40"},{src:"https://via.placeholder.com/40"}],max:3,size:"md",shape:"circle",overlap:"md"};const LargeAvatars=Template.bind({});LargeAvatars.args={avatars:[{src:"https://via.placeholder.com/100"},{src:"https://via.placeholder.com/100"},{src:"https://via.placeholder.com/100"},{src:"https://via.placeholder.com/100"}],max:4,size:100,shape:"circle",overlap:"lg"};const SquareAvatars=Template.bind({});SquareAvatars.args={avatars:[{src:"https://via.placeholder.com/40"},{src:"https://via.placeholder.com/40"},{src:"https://via.placeholder.com/40"},{src:"https://via.placeholder.com/40"}],max:3,size:"md",shape:"square",overlap:"md"};const CustomClassName=Template.bind({});CustomClassName.args={avatars:[{src:"https://via.placeholder.com/40"},{src:"https://via.placeholder.com/40"},{src:"https://via.placeholder.com/40"},{src:"https://via.placeholder.com/40"}],max:2,size:"md",shape:"circle",overlap:"sm",className:"bg-gray-100 p-2"};const __namedExportsOrder=["Default","LargeAvatars","SquareAvatars","CustomClassName"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"args => <AvatarGroup {...args} />",...Default.parameters?.docs?.source}}},LargeAvatars.parameters={...LargeAvatars.parameters,docs:{...LargeAvatars.parameters?.docs,source:{originalSource:"args => <AvatarGroup {...args} />",...LargeAvatars.parameters?.docs?.source}}},SquareAvatars.parameters={...SquareAvatars.parameters,docs:{...SquareAvatars.parameters?.docs,source:{originalSource:"args => <AvatarGroup {...args} />",...SquareAvatars.parameters?.docs?.source}}},CustomClassName.parameters={...CustomClassName.parameters,docs:{...CustomClassName.parameters?.docs,source:{originalSource:"args => <AvatarGroup {...args} />",...CustomClassName.parameters?.docs?.source}}}}}]);
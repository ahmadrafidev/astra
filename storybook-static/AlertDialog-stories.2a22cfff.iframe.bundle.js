"use strict";(self.webpackChunkastra_ui=self.webpackChunkastra_ui||[]).push([[3803],{"./stories/AlertDialog.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CustomContent:()=>CustomContent,CustomStyling:()=>CustomStyling,Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>AlertDialog_stories});var jsx_runtime=__webpack_require__("./node_modules/.pnpm/next@14.2.5_@babel+core@7.24.9_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/react/jsx-runtime.js");__webpack_require__("./node_modules/.pnpm/next@14.2.5_@babel+core@7.24.9_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/react/index.js");function cov_gxdqvcarr(){var path="/Users/ahmadrafidev/Developer/side-projects/web/astra/components/AlertDialog/AlertDialog.tsx",global=new Function("return this")(),gcv="__coverage__",coverageData={path:"/Users/ahmadrafidev/Developer/side-projects/web/astra/components/AlertDialog/AlertDialog.tsx",statementMap:{0:{start:{line:9,column:24},end:{line:43,column:1}},1:{start:{line:10,column:4},end:{line:10,column:27}},2:{start:{line:10,column:15},end:{line:10,column:27}},3:{start:{line:11,column:4},end:{line:42,column:7}},4:{start:{line:16,column:26},end:{line:16,column:45}},5:{start:{line:33,column:32},end:{line:33,column:44}},6:{start:{line:34,column:32},end:{line:34,column:42}},7:{start:{line:44,column:0},end:{line:44,column:40}}},fnMap:{0:{name:"(anonymous_0)",decl:{start:{line:9,column:24},end:{line:9,column:25}},loc:{start:{line:9,column:125},end:{line:43,column:1}},line:9},1:{name:"(anonymous_1)",decl:{start:{line:16,column:21},end:{line:16,column:22}},loc:{start:{line:16,column:26},end:{line:16,column:45}},line:16},2:{name:"(anonymous_2)",decl:{start:{line:32,column:37},end:{line:32,column:38}},loc:{start:{line:32,column:41},end:{line:35,column:29}},line:32}},branchMap:{0:{loc:{start:{line:9,column:63},end:{line:9,column:87}},type:"default-arg",locations:[{start:{line:9,column:77},end:{line:9,column:87}}],line:9},1:{loc:{start:{line:9,column:89},end:{line:9,column:109}},type:"default-arg",locations:[{start:{line:9,column:101},end:{line:9,column:109}}],line:9},2:{loc:{start:{line:10,column:4},end:{line:10,column:27}},type:"if",locations:[{start:{line:10,column:4},end:{line:10,column:27}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:10}},s:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0},f:{0:0,1:0,2:0},b:{0:[0],1:[0],2:[0,0]},inputSourceMap:{version:3,sources:["/Users/ahmadrafidev/Developer/side-projects/web/astra/components/AlertDialog/AlertDialog.tsx"],sourcesContent:['import React, { ReactNode } from \'react\';\n\n/**\n * Props for the AlertDialog component.\n * \n * @typedef {Object} AlertDialogProps\n * @property {ReactNode} children - The content of the alert dialog.\n * @property {boolean} open - Determines if the dialog is open.\n * @property {() => void} onClose - Function to call when the dialog is closed.\n * @property {() => void} onConfirm - Function to call when the confirm action is triggered.\n * @property {string} [confirmText=\'Continue\'] - Text for the confirm button.\n * @property {string} [closeText=\'Cancel\'] - Text for the close button.\n * @property {string} [className] - Additional class names for custom styling.\n */\nexport interface AlertDialogProps {\n    children: ReactNode; \n    open: boolean;\n    onClose: () => void;\n    onConfirm: () => void;\n    confirmText?: string;\n    closeText?: string;\n    className?: string;\n}\n\n/**\n * AlertDialog component for displaying a modal dialog with confirm and cancel actions.\n * \n * @component\n * @param {AlertDialogProps} props - Props for the AlertDialog component.\n * @returns {JSX.Element} The rendered AlertDialog component.\n */\nconst AlertDialog: React.FC<AlertDialogProps> = ({ \n    open,\n    onClose,\n    onConfirm,\n    children,\n    confirmText = \'Continue\',\n    closeText = \'Cancel\',\n    className\n}) => {\n    if (!open) return null;\n\n    return (\n        <div className={`fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50 ${className}`} onClick={onClose}>\n            <div className="bg-white dark:bg-gray-800 p-6 rounded-lg shadow-lg w-96 max-w-full max-h-[80vh] overflow-y-auto" onClick={e => e.stopPropagation()}>\n                <div className="mb-6">\n                    {children}\n                </div>\n                <div className="flex justify-end space-x-2">\n                    <button \n                        className="px-4 py-2 border border-gray-200 dark:border-none bg-white dark:bg-black text-gray-800 dark:text-white rounded-md hover:bg-gray-50 dark:hover:bg-gray-900 transition-colors"\n                        onClick={onClose}\n                    >\n                        {closeText}\n                    </button>\n                    <button \n                        className="px-4 py-2 border border-gray-900 dark:border-none bg-gray-900 dark:bg-gray-100 text-white dark:text-black rounded-md hover:bg-gray-800 dark:hover:bg-gray-200 transition-colors"\n                        onClick={() => {\n                            onConfirm();\n                            onClose();\n                        }}\n                    >\n                        {confirmText}\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nAlertDialog.displayName = "AlertDialog";\nexport default AlertDialog;\n'],names:["React","AlertDialog","open","onClose","onConfirm","children","confirmText","closeText","className","div","onClick","e","stopPropagation","button","displayName"],mappings:";AAAA,OAAOA,WAA0B,QAAQ;AAwBzC;;;;;;CAMC,GACD,MAAMC,cAA0C,CAAC,EAC7CC,IAAI,EACJC,OAAO,EACPC,SAAS,EACTC,QAAQ,EACRC,cAAc,UAAU,EACxBC,YAAY,QAAQ,EACpBC,SAAS,EACZ;IACG,IAAI,CAACN,MAAM,OAAO;IAElB,qBACI,KAACO;QAAID,WAAW,CAAC,2EAA2E,EAAEA,UAAU,CAAC;QAAEE,SAASP;kBAChH,cAAA,MAACM;YAAID,WAAU;YAAkGE,SAASC,CAAAA,IAAKA,EAAEC,eAAe;;8BAC5I,KAACH;oBAAID,WAAU;8BACVH;;8BAEL,MAACI;oBAAID,WAAU;;sCACX,KAACK;4BACGL,WAAU;4BACVE,SAASP;sCAERI;;sCAEL,KAACM;4BACGL,WAAU;4BACVE,SAAS;gCACLN;gCACAD;4BACJ;sCAECG;;;;;;;AAMzB;AAEAL,YAAYa,WAAW,GAAG;AAC1B,eAAeb,YAAY"},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"2721edd02dbf09b0d36b5d83f45d278fa96a0d19"},coverage=global[gcv]||(global[gcv]={});coverage[path]&&"2721edd02dbf09b0d36b5d83f45d278fa96a0d19"===coverage[path].hash||(coverage[path]=coverageData);var actualCoverage=coverage[path];return cov_gxdqvcarr=function(){return actualCoverage},actualCoverage}cov_gxdqvcarr(),cov_gxdqvcarr().s[0]++;const AlertDialog=({open,onClose,onConfirm,children,confirmText=(cov_gxdqvcarr().b[0][0]++,"Continue"),closeText=(cov_gxdqvcarr().b[1][0]++,"Cancel"),className})=>(cov_gxdqvcarr().f[0]++,cov_gxdqvcarr().s[1]++,open?(cov_gxdqvcarr().b[2][1]++,cov_gxdqvcarr().s[3]++,(0,jsx_runtime.jsx)("div",{className:`fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50 ${className}`,onClick:onClose,children:(0,jsx_runtime.jsxs)("div",{className:"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-lg w-96 max-w-full max-h-[80vh] overflow-y-auto",onClick:e=>(cov_gxdqvcarr().f[1]++,cov_gxdqvcarr().s[4]++,e.stopPropagation()),children:[(0,jsx_runtime.jsx)("div",{className:"mb-6",children}),(0,jsx_runtime.jsxs)("div",{className:"flex justify-end space-x-2",children:[(0,jsx_runtime.jsx)("button",{className:"px-4 py-2 border border-gray-200 dark:border-none bg-white dark:bg-black text-gray-800 dark:text-white rounded-md hover:bg-gray-50 dark:hover:bg-gray-900 transition-colors",onClick:onClose,children:closeText}),(0,jsx_runtime.jsx)("button",{className:"px-4 py-2 border border-gray-900 dark:border-none bg-gray-900 dark:bg-gray-100 text-white dark:text-black rounded-md hover:bg-gray-800 dark:hover:bg-gray-200 transition-colors",onClick:()=>{cov_gxdqvcarr().f[2]++,cov_gxdqvcarr().s[5]++,onConfirm(),cov_gxdqvcarr().s[6]++,onClose()},children:confirmText})]})]})})):(cov_gxdqvcarr().b[2][0]++,cov_gxdqvcarr().s[2]++,null));cov_gxdqvcarr().s[7]++,AlertDialog.displayName="AlertDialog";const AlertDialog_AlertDialog=AlertDialog;try{AlertDialog.displayName="AlertDialog",AlertDialog.__docgenInfo={description:"AlertDialog component for displaying a modal dialog with confirm and cancel actions.",displayName:"AlertDialog",props:{open:{defaultValue:null,description:"",name:"open",required:!0,type:{name:"boolean"}},onClose:{defaultValue:null,description:"",name:"onClose",required:!0,type:{name:"() => void"}},onConfirm:{defaultValue:null,description:"",name:"onConfirm",required:!0,type:{name:"() => void"}},confirmText:{defaultValue:{value:"Continue"},description:"",name:"confirmText",required:!1,type:{name:"string"}},closeText:{defaultValue:{value:"Cancel"},description:"",name:"closeText",required:!1,type:{name:"string"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["components/AlertDialog/AlertDialog.tsx#AlertDialog"]={docgenInfo:AlertDialog.__docgenInfo,name:"AlertDialog",path:"components/AlertDialog/AlertDialog.tsx#AlertDialog"})}catch(__react_docgen_typescript_loader_error){}const AlertDialog_stories={title:"Components/AlertDialog",component:AlertDialog_AlertDialog,argTypes:{open:{control:{type:"boolean"},description:"Determines if the dialog is open.",table:{type:{summary:"boolean"},defaultValue:{summary:"false"}}},onClose:{action:"closed",description:"Function to call when the dialog is closed.",table:{type:{summary:"() => void"}}},onConfirm:{action:"confirmed",description:"Function to call when the confirm action is triggered.",table:{type:{summary:"() => void"}}},confirmText:{control:{type:"text"},description:"Text for the confirm button.",table:{type:{summary:"string"},defaultValue:{summary:"Continue"}}},closeText:{control:{type:"text"},description:"Text for the close button.",table:{type:{summary:"string"},defaultValue:{summary:"Cancel"}}},className:{control:{type:"text"},description:"Additional class names for custom styling.",table:{type:{summary:"string"}}},children:{control:"text",description:"The content of the alert dialog.",table:{type:{summary:"ReactNode"}}}},parameters:{docs:{description:{component:"The AlertDialog component is used to display a modal dialog with confirm and cancel actions. It can be customized with different button texts and content."}}}},Template=args=>(0,jsx_runtime.jsx)(AlertDialog_AlertDialog,{...args}),Default=Template.bind({});Default.args={open:!0,confirmText:"Continue",closeText:"Cancel",children:"Are you sure you want to proceed with this action?"};const CustomContent=Template.bind({});CustomContent.args={open:!0,confirmText:"Yes, Delete",closeText:"No, Keep",children:(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)("h3",{className:"text-lg font-semibold mb-4",children:"Delete Item"}),(0,jsx_runtime.jsx)("p",{children:"This action cannot be undone. Do you want to continue?"})]}),className:"custom-alert-dialog"};const CustomStyling=Template.bind({});CustomStyling.args={open:!0,confirmText:"Proceed",closeText:"Cancel",children:"This is a custom-styled alert dialog.",className:"bg-red-100 border border-red-500"};const __namedExportsOrder=["Default","CustomContent","CustomStyling"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"args => <AlertDialog {...args} />",...Default.parameters?.docs?.source}}},CustomContent.parameters={...CustomContent.parameters,docs:{...CustomContent.parameters?.docs,source:{originalSource:"args => <AlertDialog {...args} />",...CustomContent.parameters?.docs?.source}}},CustomStyling.parameters={...CustomStyling.parameters,docs:{...CustomStyling.parameters?.docs,source:{originalSource:"args => <AlertDialog {...args} />",...CustomStyling.parameters?.docs?.source}}}}}]);
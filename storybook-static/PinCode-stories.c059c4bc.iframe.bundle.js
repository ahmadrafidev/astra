"use strict";(self.webpackChunkastra_ui=self.webpackChunkastra_ui||[]).push([[3463],{"./stories/PinCode.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CompleteCallback:()=>CompleteCallback,Default:()=>Default,FourDigits:()=>FourDigits,NoMask:()=>NoMask,WithCustomClass:()=>WithCustomClass,__namedExportsOrder:()=>__namedExportsOrder,default:()=>PinCode_stories});var jsx_runtime=__webpack_require__("./node_modules/.pnpm/next@14.2.5_@babel+core@7.24.9_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/react/jsx-runtime.js"),react=__webpack_require__("./node_modules/.pnpm/next@14.2.5_@babel+core@7.24.9_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/react/index.js");function cov_1rssyv5c7b(){var path="/Users/ahmadrafidev/Developer/side-projects/web/astra/components/PinCode/PinCode.tsx",global=new Function("return this")(),gcv="__coverage__",coverageData={path:"/Users/ahmadrafidev/Developer/side-projects/web/astra/components/PinCode/PinCode.tsx",statementMap:{0:{start:{line:9,column:20},end:{line:89,column:1}},1:{start:{line:10,column:30},end:{line:10,column:44}},2:{start:{line:11,column:22},end:{line:11,column:32}},3:{start:{line:12,column:19},end:{line:14,column:5}},4:{start:{line:13,column:8},end:{line:13,column:43}},5:{start:{line:15,column:4},end:{line:23,column:7}},6:{start:{line:16,column:8},end:{line:18,column:9}},7:{start:{line:17,column:12},end:{line:17,column:110}},8:{start:{line:24,column:25},end:{line:50,column:5}},9:{start:{line:25,column:22},end:{line:25,column:36}},10:{start:{line:26,column:23},end:{line:28,column:9}},11:{start:{line:29,column:8},end:{line:49,column:9}},12:{start:{line:30,column:12},end:{line:30,column:27}},13:{start:{line:31,column:12},end:{line:31,column:31}},14:{start:{line:32,column:12},end:{line:32,column:90}},15:{start:{line:34,column:29},end:{line:34,column:58}},16:{start:{line:35,column:12},end:{line:48,column:13}},17:{start:{line:36,column:16},end:{line:36,column:31}},18:{start:{line:37,column:16},end:{line:37,column:41}},19:{start:{line:38,column:16},end:{line:38,column:94}},20:{start:{line:39,column:16},end:{line:42,column:17}},21:{start:{line:41,column:20},end:{line:41,column:155}},22:{start:{line:43,column:16},end:{line:45,column:17}},23:{start:{line:44,column:20},end:{line:44,column:48}},24:{start:{line:47,column:16},end:{line:47,column:60}},25:{start:{line:51,column:26},end:{line:57,column:5}},26:{start:{line:52,column:8},end:{line:56,column:9}},27:{start:{line:54,column:12},end:{line:54,column:31}},28:{start:{line:55,column:12},end:{line:55,column:147}},29:{start:{line:58,column:4},end:{line:62,column:7}},30:{start:{line:59,column:8},end:{line:59,column:63}},31:{start:{line:63,column:4},end:{line:88,column:7}},32:{start:{line:72,column:49},end:{line:81,column:29}},33:{start:{line:73,column:35},end:{line:73,column:52}},34:{start:{line:77,column:39},end:{line:77,column:61}},35:{start:{line:78,column:40},end:{line:78,column:63}},36:{start:{line:90,column:0},end:{line:90,column:32}}},fnMap:{0:{name:"(anonymous_0)",decl:{start:{line:9,column:20},end:{line:9,column:21}},loc:{start:{line:9,column:115},end:{line:89,column:1}},line:9},1:{name:"(anonymous_1)",decl:{start:{line:12,column:19},end:{line:12,column:20}},loc:{start:{line:12,column:37},end:{line:14,column:5}},line:12},2:{name:"(anonymous_2)",decl:{start:{line:15,column:14},end:{line:15,column:15}},loc:{start:{line:15,column:18},end:{line:19,column:5}},line:15},3:{name:"(anonymous_3)",decl:{start:{line:24,column:25},end:{line:24,column:26}},loc:{start:{line:24,column:37},end:{line:50,column:5}},line:24},4:{name:"(anonymous_4)",decl:{start:{line:51,column:26},end:{line:51,column:27}},loc:{start:{line:51,column:38},end:{line:57,column:5}},line:51},5:{name:"(anonymous_5)",decl:{start:{line:58,column:14},end:{line:58,column:15}},loc:{start:{line:58,column:18},end:{line:60,column:5}},line:58},6:{name:"(anonymous_6)",decl:{start:{line:72,column:23},end:{line:72,column:24}},loc:{start:{line:72,column:49},end:{line:81,column:29}},line:72},7:{name:"(anonymous_7)",decl:{start:{line:73,column:29},end:{line:73,column:30}},loc:{start:{line:73,column:35},end:{line:73,column:52}},line:73},8:{name:"(anonymous_8)",decl:{start:{line:77,column:34},end:{line:77,column:35}},loc:{start:{line:77,column:39},end:{line:77,column:61}},line:77},9:{name:"(anonymous_9)",decl:{start:{line:78,column:35},end:{line:78,column:36}},loc:{start:{line:78,column:40},end:{line:78,column:63}},line:78}},branchMap:{0:{loc:{start:{line:9,column:23},end:{line:9,column:33}},type:"default-arg",locations:[{start:{line:9,column:32},end:{line:9,column:33}}],line:9},1:{loc:{start:{line:9,column:62},end:{line:9,column:75}},type:"default-arg",locations:[{start:{line:9,column:71},end:{line:9,column:75}}],line:9},2:{loc:{start:{line:9,column:77},end:{line:9,column:85}},type:"default-arg",locations:[{start:{line:9,column:83},end:{line:9,column:85}}],line:9},3:{loc:{start:{line:16,column:8},end:{line:18,column:9}},type:"if",locations:[{start:{line:16,column:8},end:{line:18,column:9}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:16},4:{loc:{start:{line:17,column:12},end:{line:17,column:109}},type:"cond-expr",locations:[{start:{line:17,column:61},end:{line:17,column:67}},{start:{line:17,column:70},end:{line:17,column:109}}],line:17},5:{loc:{start:{line:17,column:12},end:{line:17,column:58}},type:"binary-expr",locations:[{start:{line:17,column:12},end:{line:17,column:32}},{start:{line:17,column:36},end:{line:17,column:58}}],line:17},6:{loc:{start:{line:29,column:8},end:{line:49,column:9}},type:"if",locations:[{start:{line:29,column:8},end:{line:49,column:9}},{start:{line:33,column:15},end:{line:49,column:9}}],line:29},7:{loc:{start:{line:32,column:12},end:{line:32,column:89}},type:"cond-expr",locations:[{start:{line:32,column:61},end:{line:32,column:67}},{start:{line:32,column:70},end:{line:32,column:89}}],line:32},8:{loc:{start:{line:32,column:12},end:{line:32,column:58}},type:"binary-expr",locations:[{start:{line:32,column:12},end:{line:32,column:32}},{start:{line:32,column:36},end:{line:32,column:58}}],line:32},9:{loc:{start:{line:34,column:29},end:{line:34,column:58}},type:"binary-expr",locations:[{start:{line:34,column:29},end:{line:34,column:52}},{start:{line:34,column:56},end:{line:34,column:58}}],line:34},10:{loc:{start:{line:35,column:12},end:{line:48,column:13}},type:"if",locations:[{start:{line:35,column:12},end:{line:48,column:13}},{start:{line:46,column:19},end:{line:48,column:13}}],line:35},11:{loc:{start:{line:38,column:16},end:{line:38,column:93}},type:"cond-expr",locations:[{start:{line:38,column:65},end:{line:38,column:71}},{start:{line:38,column:74},end:{line:38,column:93}}],line:38},12:{loc:{start:{line:38,column:16},end:{line:38,column:62}},type:"binary-expr",locations:[{start:{line:38,column:16},end:{line:38,column:36}},{start:{line:38,column:40},end:{line:38,column:62}}],line:38},13:{loc:{start:{line:39,column:16},end:{line:42,column:17}},type:"if",locations:[{start:{line:39,column:16},end:{line:42,column:17}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:39},14:{loc:{start:{line:39,column:20},end:{line:39,column:50}},type:"binary-expr",locations:[{start:{line:39,column:20},end:{line:39,column:28}},{start:{line:39,column:32},end:{line:39,column:50}}],line:39},15:{loc:{start:{line:41,column:20},end:{line:41,column:154}},type:"cond-expr",locations:[{start:{line:41,column:118},end:{line:41,column:124}},{start:{line:41,column:127},end:{line:41,column:154}}],line:41},16:{loc:{start:{line:41,column:20},end:{line:41,column:115}},type:"binary-expr",locations:[{start:{line:41,column:20},end:{line:41,column:81}},{start:{line:41,column:85},end:{line:41,column:115}}],line:41},17:{loc:{start:{line:43,column:16},end:{line:45,column:17}},type:"if",locations:[{start:{line:43,column:16},end:{line:45,column:17}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:43},18:{loc:{start:{line:43,column:20},end:{line:43,column:66}},type:"binary-expr",locations:[{start:{line:43,column:20},end:{line:43,column:28}},{start:{line:43,column:32},end:{line:43,column:52}},{start:{line:43,column:56},end:{line:43,column:66}}],line:43},19:{loc:{start:{line:52,column:8},end:{line:56,column:9}},type:"if",locations:[{start:{line:52,column:8},end:{line:56,column:9}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:52},20:{loc:{start:{line:52,column:12},end:{line:52,column:61}},type:"binary-expr",locations:[{start:{line:52,column:12},end:{line:52,column:33}},{start:{line:52,column:37},end:{line:52,column:48}},{start:{line:52,column:52},end:{line:52,column:61}}],line:52},21:{loc:{start:{line:55,column:12},end:{line:55,column:146}},type:"cond-expr",locations:[{start:{line:55,column:110},end:{line:55,column:116}},{start:{line:55,column:119},end:{line:55,column:146}}],line:55},22:{loc:{start:{line:55,column:12},end:{line:55,column:107}},type:"binary-expr",locations:[{start:{line:55,column:12},end:{line:55,column:73}},{start:{line:55,column:77},end:{line:55,column:107}}],line:55},23:{loc:{start:{line:74,column:30},end:{line:74,column:58}},type:"cond-expr",locations:[{start:{line:74,column:39},end:{line:74,column:49}},{start:{line:74,column:52},end:{line:74,column:58}}],line:74},24:{loc:{start:{line:76,column:31},end:{line:76,column:47}},type:"binary-expr",locations:[{start:{line:76,column:31},end:{line:76,column:41}},{start:{line:76,column:45},end:{line:76,column:47}}],line:76},25:{loc:{start:{line:83,column:12},end:{line:86,column:14}},type:"binary-expr",locations:[{start:{line:83,column:12},end:{line:83,column:17}},{start:{line:83,column:35},end:{line:86,column:14}}],line:83}},s:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:0,30:0,31:0,32:0,33:0,34:0,35:0,36:0},f:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0},b:{0:[0],1:[0],2:[0],3:[0,0],4:[0,0],5:[0,0],6:[0,0],7:[0,0],8:[0,0],9:[0,0],10:[0,0],11:[0,0],12:[0,0],13:[0,0],14:[0,0],15:[0,0],16:[0,0],17:[0,0],18:[0,0,0],19:[0,0],20:[0,0,0],21:[0,0],22:[0,0],23:[0,0],24:[0,0],25:[0,0]},inputSourceMap:{version:3,sources:["/Users/ahmadrafidev/Developer/side-projects/web/astra/components/PinCode/PinCode.tsx"],sourcesContent:["import React, { useState, useEffect, useRef } from 'react';\n\n/**\n * Props for the PinCode component.\n * \n * @typedef {Object} PinCodeProps\n * @property {number} [length=6] - The length of the PIN code.\n * @property {string} [className] - Additional class names for custom styling.\n * @property {string} [inputClassName] - Additional class names for the input elements.\n * @property {boolean} [isMask=true] - Whether to mask the input values.\n * @property {(pin: string) => void} [onComplete] - Callback when the PIN code input is complete.\n * @property {string[]} [pin=[]] - The current PIN code.\n * @property {(pin: string[]) => void} [onPinChange] - Callback when the PIN code changes.\n */\nexport interface PinCodeProps {\n  length?: number;\n  className?: string;\n  inputClassName?: string;\n  isMask?: boolean;\n  pin?: string[];\n  onComplete?: (pin: string) => void;\n  onPinChange?: (pin: string[]) => void;\n}\n\n/**\n * PinCode component for inputting a PIN code.\n * \n * @component\n * @param {PinCodeProps} props - Props for the PinCode component.\n * @returns {JSX.Element} The rendered PinCode component.\n */\nconst PinCode: React.FC<PinCodeProps> = ({\n  length = 6,\n  className,\n  inputClassName,\n  isMask = true,\n  pin = [],\n  onPinChange,\n  onComplete,\n}) => {\n  const [error, setError] = useState<string | null>(null);\n  const inputRefs = useRef<(HTMLInputElement | null)[]>([]);\n\n  const setRef = (element: HTMLInputElement | null, index: number) => {\n    inputRefs.current[index] = element;\n  };\n\n  useEffect(() => {\n    if (pin.length === 0) {\n      onPinChange?.(new Array(length).fill(''));\n    }\n  }, [length, pin.length, onPinChange]);\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>, index: number) => {\n    const value = e.target.value;\n    const newPin = [...pin];\n  \n    if (value === '') {\n      setError(null);\n      newPin[index] = '';\n      onPinChange?.(newPin);\n    } else {\n      const lastChar = value[value.length - 1] || '';\n      if (/^[0-9]$/.test(lastChar)) {\n        setError(null);\n        newPin[index] = lastChar;\n        onPinChange?.(newPin);\n  \n        if (lastChar && index < length - 1) {\n          inputRefs.current[index + 1]?.focus();\n        }\n\n        if (lastChar && index === length - 1 && onComplete) {\n          onComplete(newPin.join(''));\n        }\n      } else {\n        setError('Only numeric values are allowed');\n      }\n    }\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>, index: number) => {\n    if (e.key === 'Backspace' && !pin[index] && index > 0) {\n      e.preventDefault();\n      inputRefs.current[index - 1]?.focus();\n    } \n  };\n\n  useEffect(() => {\n    inputRefs.current = inputRefs.current.slice(0, length);\n  }, [length]);\n\n  return (\n    <div className={`flex flex-col space-y-1 ${className}`}>\n      <div className=\"flex space-x-2\" role=\"group\" aria-label=\"PIN Code\">\n        {Array.from({ length }).map((_, index) => (\n          <input\n            key={index}\n            ref={el => setRef(el, index)}\n            type={isMask ? 'password' : 'text'}\n            maxLength={1}\n            value={pin[index] || ''}\n            onChange={(e) => handleChange(e, index)}\n            onKeyDown={(e) => handleKeyDown(e, index)}\n            className={`w-12 h-12 text-center text-lg bg-gray-200 dark:bg-gray-800 text-gray-800 dark:text-gray-50 border-none rounded focus:outline-1 focus:outline-gray-950 focus:bg-gray-50 dark:focus:outline-gray-50 dark:focus:bg-black ${inputClassName}`}\n            aria-label={`Digit ${index + 1}`}\n          />\n        ))}\n      </div>\n      {error && <p className=\"text-red-600 mt-2\">{error}</p>}\n    </div>\n  );\n};\n\nPinCode.displayName = \"PinCode\";\nexport default PinCode;\n"],names:["React","useState","useEffect","useRef","PinCode","length","className","inputClassName","isMask","pin","onPinChange","onComplete","error","setError","inputRefs","setRef","element","index","current","Array","fill","handleChange","e","value","target","newPin","lastChar","test","focus","join","handleKeyDown","key","preventDefault","slice","div","role","aria-label","from","map","_","input","ref","el","type","maxLength","onChange","onKeyDown","p","displayName"],mappings:";AAAA,OAAOA,SAASC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,QAAQ;AAwB3D;;;;;;CAMC,GACD,MAAMC,UAAkC,CAAC,EACvCC,SAAS,CAAC,EACVC,SAAS,EACTC,cAAc,EACdC,SAAS,IAAI,EACbC,MAAM,EAAE,EACRC,WAAW,EACXC,UAAU,EACX;IACC,MAAM,CAACC,OAAOC,SAAS,GAAGZ,SAAwB;IAClD,MAAMa,YAAYX,OAAoC,EAAE;IAExD,MAAMY,SAAS,CAACC,SAAkCC;QAChDH,UAAUI,OAAO,CAACD,MAAM,GAAGD;IAC7B;IAEAd,UAAU;QACR,IAAIO,IAAIJ,MAAM,KAAK,GAAG;YACpBK,wBAAAA,kCAAAA,YAAc,IAAIS,MAAMd,QAAQe,IAAI,CAAC;QACvC;IACF,GAAG;QAACf;QAAQI,IAAIJ,MAAM;QAAEK;KAAY;IAEpC,MAAMW,eAAe,CAACC,GAAwCL;QAC5D,MAAMM,QAAQD,EAAEE,MAAM,CAACD,KAAK;QAC5B,MAAME,SAAS;eAAIhB;SAAI;QAEvB,IAAIc,UAAU,IAAI;YAChBV,SAAS;YACTY,MAAM,CAACR,MAAM,GAAG;YAChBP,wBAAAA,kCAAAA,YAAce;QAChB,OAAO;YACL,MAAMC,WAAWH,KAAK,CAACA,MAAMlB,MAAM,GAAG,EAAE,IAAI;YAC5C,IAAI,UAAUsB,IAAI,CAACD,WAAW;gBAC5Bb,SAAS;gBACTY,MAAM,CAACR,MAAM,GAAGS;gBAChBhB,wBAAAA,kCAAAA,YAAce;gBAEd,IAAIC,YAAYT,QAAQZ,SAAS,GAAG;wBAClCS;qBAAAA,sBAAAA,UAAUI,OAAO,CAACD,QAAQ,EAAE,cAA5BH,0CAAAA,oBAA8Bc,KAAK;gBACrC;gBAEA,IAAIF,YAAYT,UAAUZ,SAAS,KAAKM,YAAY;oBAClDA,WAAWc,OAAOI,IAAI,CAAC;gBACzB;YACF,OAAO;gBACLhB,SAAS;YACX;QACF;IACF;IAEA,MAAMiB,gBAAgB,CAACR,GAA0CL;QAC/D,IAAIK,EAAES,GAAG,KAAK,eAAe,CAACtB,GAAG,CAACQ,MAAM,IAAIA,QAAQ,GAAG;gBAErDH;YADAQ,EAAEU,cAAc;aAChBlB,sBAAAA,UAAUI,OAAO,CAACD,QAAQ,EAAE,cAA5BH,0CAAAA,oBAA8Bc,KAAK;QACrC;IACF;IAEA1B,UAAU;QACRY,UAAUI,OAAO,GAAGJ,UAAUI,OAAO,CAACe,KAAK,CAAC,GAAG5B;IACjD,GAAG;QAACA;KAAO;IAEX,qBACE,MAAC6B;QAAI5B,WAAW,CAAC,wBAAwB,EAAEA,UAAU,CAAC;;0BACpD,KAAC4B;gBAAI5B,WAAU;gBAAiB6B,MAAK;gBAAQC,cAAW;0BACrDjB,MAAMkB,IAAI,CAAC;oBAAEhC;gBAAO,GAAGiC,GAAG,CAAC,CAACC,GAAGtB,sBAC9B,KAACuB;wBAECC,KAAKC,CAAAA,KAAM3B,OAAO2B,IAAIzB;wBACtB0B,MAAMnC,SAAS,aAAa;wBAC5BoC,WAAW;wBACXrB,OAAOd,GAAG,CAACQ,MAAM,IAAI;wBACrB4B,UAAU,CAACvB,IAAMD,aAAaC,GAAGL;wBACjC6B,WAAW,CAACxB,IAAMQ,cAAcR,GAAGL;wBACnCX,WAAW,CAAC,sNAAsN,EAAEC,eAAe,CAAC;wBACpP6B,cAAY,CAAC,MAAM,EAAEnB,QAAQ,EAAE,CAAC;uBAR3BA;;YAYVL,uBAAS,KAACmC;gBAAEzC,WAAU;0BAAqBM;;;;AAGlD;AAEAR,QAAQ4C,WAAW,GAAG;AACtB,eAAe5C,QAAQ"},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"334fc92cad3f8220dd0b22f6359f9a3f07e6d00b"},coverage=global[gcv]||(global[gcv]={});coverage[path]&&"334fc92cad3f8220dd0b22f6359f9a3f07e6d00b"===coverage[path].hash||(coverage[path]=coverageData);var actualCoverage=coverage[path];return cov_1rssyv5c7b=function(){return actualCoverage},actualCoverage}cov_1rssyv5c7b(),cov_1rssyv5c7b().s[0]++;const PinCode=({length=(cov_1rssyv5c7b().b[0][0]++,6),className,inputClassName,isMask=(cov_1rssyv5c7b().b[1][0]++,!0),pin=(cov_1rssyv5c7b().b[2][0]++,[]),onPinChange,onComplete})=>{cov_1rssyv5c7b().f[0]++;const[error,setError]=(cov_1rssyv5c7b().s[1]++,(0,react.useState)(null)),inputRefs=(cov_1rssyv5c7b().s[2]++,(0,react.useRef)([]));cov_1rssyv5c7b().s[3]++;cov_1rssyv5c7b().s[5]++,(0,react.useEffect)((()=>{cov_1rssyv5c7b().f[2]++,cov_1rssyv5c7b().s[6]++,0===pin.length?(cov_1rssyv5c7b().b[3][0]++,cov_1rssyv5c7b().s[7]++,cov_1rssyv5c7b().b[5][0]++,null===onPinChange||(cov_1rssyv5c7b().b[5][1]++,void 0===onPinChange)?cov_1rssyv5c7b().b[4][0]++:(cov_1rssyv5c7b().b[4][1]++,onPinChange(new Array(length).fill("")))):cov_1rssyv5c7b().b[3][1]++}),[length,pin.length,onPinChange]),cov_1rssyv5c7b().s[8]++;cov_1rssyv5c7b().s[25]++;return cov_1rssyv5c7b().s[29]++,(0,react.useEffect)((()=>{cov_1rssyv5c7b().f[5]++,cov_1rssyv5c7b().s[30]++,inputRefs.current=inputRefs.current.slice(0,length)}),[length]),cov_1rssyv5c7b().s[31]++,(0,jsx_runtime.jsxs)("div",{className:`flex flex-col space-y-1 ${className}`,children:[(0,jsx_runtime.jsx)("div",{className:"flex space-x-2",role:"group","aria-label":"PIN Code",children:Array.from({length}).map(((_,index)=>(cov_1rssyv5c7b().f[6]++,cov_1rssyv5c7b().s[32]++,(0,jsx_runtime.jsx)("input",{ref:el=>(cov_1rssyv5c7b().f[7]++,cov_1rssyv5c7b().s[33]++,((element,index)=>{cov_1rssyv5c7b().f[1]++,cov_1rssyv5c7b().s[4]++,inputRefs.current[index]=element})(el,index)),type:isMask?(cov_1rssyv5c7b().b[23][0]++,"password"):(cov_1rssyv5c7b().b[23][1]++,"text"),maxLength:1,value:(cov_1rssyv5c7b().b[24][0]++,pin[index]||(cov_1rssyv5c7b().b[24][1]++,"")),onChange:e=>(cov_1rssyv5c7b().f[8]++,cov_1rssyv5c7b().s[34]++,((e,index)=>{cov_1rssyv5c7b().f[3]++;const value=(cov_1rssyv5c7b().s[9]++,e.target.value),newPin=(cov_1rssyv5c7b().s[10]++,[...pin]);if(cov_1rssyv5c7b().s[11]++,""===value)cov_1rssyv5c7b().b[6][0]++,cov_1rssyv5c7b().s[12]++,setError(null),cov_1rssyv5c7b().s[13]++,newPin[index]="",cov_1rssyv5c7b().s[14]++,cov_1rssyv5c7b().b[8][0]++,null===onPinChange||(cov_1rssyv5c7b().b[8][1]++,void 0===onPinChange)?cov_1rssyv5c7b().b[7][0]++:(cov_1rssyv5c7b().b[7][1]++,onPinChange(newPin));else{cov_1rssyv5c7b().b[6][1]++;const lastChar=(cov_1rssyv5c7b().s[15]++,cov_1rssyv5c7b().b[9][0]++,value[value.length-1]||(cov_1rssyv5c7b().b[9][1]++,""));var _inputRefs_current_;if(cov_1rssyv5c7b().s[16]++,/^[0-9]$/.test(lastChar))cov_1rssyv5c7b().b[10][0]++,cov_1rssyv5c7b().s[17]++,setError(null),cov_1rssyv5c7b().s[18]++,newPin[index]=lastChar,cov_1rssyv5c7b().s[19]++,cov_1rssyv5c7b().b[12][0]++,null===onPinChange||(cov_1rssyv5c7b().b[12][1]++,void 0===onPinChange)?cov_1rssyv5c7b().b[11][0]++:(cov_1rssyv5c7b().b[11][1]++,onPinChange(newPin)),cov_1rssyv5c7b().s[20]++,cov_1rssyv5c7b().b[14][0]++,lastChar&&(cov_1rssyv5c7b().b[14][1]++,index<length-1)?(cov_1rssyv5c7b().b[13][0]++,cov_1rssyv5c7b().s[21]++,cov_1rssyv5c7b().b[16][0]++,null===(_inputRefs_current_=inputRefs.current[index+1])||(cov_1rssyv5c7b().b[16][1]++,void 0===_inputRefs_current_)?cov_1rssyv5c7b().b[15][0]++:(cov_1rssyv5c7b().b[15][1]++,_inputRefs_current_.focus())):cov_1rssyv5c7b().b[13][1]++,cov_1rssyv5c7b().s[22]++,cov_1rssyv5c7b().b[18][0]++,lastChar&&(cov_1rssyv5c7b().b[18][1]++,index===length-1)&&(cov_1rssyv5c7b().b[18][2]++,onComplete)?(cov_1rssyv5c7b().b[17][0]++,cov_1rssyv5c7b().s[23]++,onComplete(newPin.join(""))):cov_1rssyv5c7b().b[17][1]++;else cov_1rssyv5c7b().b[10][1]++,cov_1rssyv5c7b().s[24]++,setError("Only numeric values are allowed")}})(e,index)),onKeyDown:e=>(cov_1rssyv5c7b().f[9]++,cov_1rssyv5c7b().s[35]++,((e,index)=>{var _inputRefs_current_;cov_1rssyv5c7b().f[4]++,cov_1rssyv5c7b().s[26]++,cov_1rssyv5c7b().b[20][0]++,"Backspace"===e.key&&(cov_1rssyv5c7b().b[20][1]++,!pin[index])&&(cov_1rssyv5c7b().b[20][2]++,index>0)?(cov_1rssyv5c7b().b[19][0]++,cov_1rssyv5c7b().s[27]++,e.preventDefault(),cov_1rssyv5c7b().s[28]++,cov_1rssyv5c7b().b[22][0]++,null===(_inputRefs_current_=inputRefs.current[index-1])||(cov_1rssyv5c7b().b[22][1]++,void 0===_inputRefs_current_)?cov_1rssyv5c7b().b[21][0]++:(cov_1rssyv5c7b().b[21][1]++,_inputRefs_current_.focus())):cov_1rssyv5c7b().b[19][1]++})(e,index)),className:`w-12 h-12 text-center text-lg bg-gray-200 dark:bg-gray-800 text-gray-800 dark:text-gray-50 border-none rounded focus:outline-1 focus:outline-gray-950 focus:bg-gray-50 dark:focus:outline-gray-50 dark:focus:bg-black ${inputClassName}`,"aria-label":`Digit ${index+1}`},index))))}),(cov_1rssyv5c7b().b[25][0]++,error&&(cov_1rssyv5c7b().b[25][1]++,(0,jsx_runtime.jsx)("p",{className:"text-red-600 mt-2",children:error})))]})};cov_1rssyv5c7b().s[36]++,PinCode.displayName="PinCode";const PinCode_PinCode=PinCode;try{PinCode.displayName="PinCode",PinCode.__docgenInfo={description:"PinCode component for inputting a PIN code.",displayName:"PinCode",props:{length:{defaultValue:{value:"6"},description:"",name:"length",required:!1,type:{name:"number"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},inputClassName:{defaultValue:null,description:"",name:"inputClassName",required:!1,type:{name:"string"}},isMask:{defaultValue:{value:"true"},description:"",name:"isMask",required:!1,type:{name:"boolean"}},pin:{defaultValue:{value:"[]"},description:"",name:"pin",required:!1,type:{name:"string[]"}},onComplete:{defaultValue:null,description:"",name:"onComplete",required:!1,type:{name:"((pin: string) => void)"}},onPinChange:{defaultValue:null,description:"",name:"onPinChange",required:!1,type:{name:"((pin: string[]) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["components/PinCode/PinCode.tsx#PinCode"]={docgenInfo:PinCode.__docgenInfo,name:"PinCode",path:"components/PinCode/PinCode.tsx#PinCode"})}catch(__react_docgen_typescript_loader_error){}const PinCode_stories={title:"Components/PinCode",component:PinCode_PinCode,argTypes:{length:{control:{type:"number",min:1},description:"The length of the PIN code.",table:{type:{summary:"number"},defaultValue:{summary:"6"}}},className:{control:"text",description:"Additional class names for custom styling.",table:{type:{summary:"string"}}},inputClassName:{control:"text",description:"Additional class names for the input elements.",table:{type:{summary:"string"}}},isMask:{control:"boolean",description:"Whether to mask the input values.",table:{type:{summary:"boolean"},defaultValue:{summary:"true"}}},pin:{control:"object",description:"The current PIN code.",table:{type:{summary:"string[]"},defaultValue:{summary:"[]"}}},onComplete:{action:"completed",description:"Callback when the PIN code input is complete.",table:{type:{summary:"(pin: string) => void"}}},onPinChange:{action:"changed",description:"Callback when the PIN code changes.",table:{type:{summary:"(pin: string[]) => void"}}}}},Template=args=>(0,jsx_runtime.jsx)(PinCode_PinCode,{...args}),Default=Template.bind({});Default.args={length:6,isMask:!0};const FourDigits=Template.bind({});FourDigits.args={length:4,isMask:!0};const NoMask=Template.bind({});NoMask.args={length:6,isMask:!1};const WithCustomClass=Template.bind({});WithCustomClass.args={length:6,isMask:!0,inputClassName:"custom-input-class"};const CompleteCallback=Template.bind({});CompleteCallback.args={length:4,isMask:!0,onComplete:pin=>alert(`Completed PIN: ${pin}`)};const __namedExportsOrder=["Default","FourDigits","NoMask","WithCustomClass","CompleteCallback"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"args => <PinCode {...args} />",...Default.parameters?.docs?.source}}},FourDigits.parameters={...FourDigits.parameters,docs:{...FourDigits.parameters?.docs,source:{originalSource:"args => <PinCode {...args} />",...FourDigits.parameters?.docs?.source}}},NoMask.parameters={...NoMask.parameters,docs:{...NoMask.parameters?.docs,source:{originalSource:"args => <PinCode {...args} />",...NoMask.parameters?.docs?.source}}},WithCustomClass.parameters={...WithCustomClass.parameters,docs:{...WithCustomClass.parameters?.docs,source:{originalSource:"args => <PinCode {...args} />",...WithCustomClass.parameters?.docs?.source}}},CompleteCallback.parameters={...CompleteCallback.parameters,docs:{...CompleteCallback.parameters?.docs,source:{originalSource:"args => <PinCode {...args} />",...CompleteCallback.parameters?.docs?.source}}}}}]);
"use strict";(self.webpackChunkastra_ui=self.webpackChunkastra_ui||[]).push([[1247],{"./stories/Accordion.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,MultipleSelection:()=>MultipleSelection,SplitVariant:()=>SplitVariant,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Accordion_stories});var jsx_runtime=__webpack_require__("./node_modules/.pnpm/next@14.2.5_@babel+core@7.24.9_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/react/jsx-runtime.js"),react=__webpack_require__("./node_modules/.pnpm/next@14.2.5_@babel+core@7.24.9_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/react/index.js");function cov_uvfwlklae(){var path="/Users/ahmadrafidev/Developer/side-projects/web/astra/components/Accordion/Accordion.tsx",global=new Function("return this")(),gcv="__coverage__",coverage=global[gcv]||(global[gcv]={});coverage[path]&&"3966b761b37ea7d795334664e320b600e9ec5f9f"===coverage[path].hash||(coverage[path]={path:"/Users/ahmadrafidev/Developer/side-projects/web/astra/components/Accordion/Accordion.tsx",statementMap:{0:{start:{line:10,column:29},end:{line:38,column:1}},1:{start:{line:11,column:42},end:{line:11,column:54}},2:{start:{line:16,column:29},end:{line:27,column:5}},3:{start:{line:17,column:8},end:{line:26,column:9}},4:{start:{line:18,column:12},end:{line:20,column:15}},5:{start:{line:22,column:12},end:{line:25,column:15}},6:{start:{line:22,column:81},end:{line:22,column:92}},7:{start:{line:28,column:4},end:{line:37,column:7}},8:{start:{line:30,column:77},end:{line:36,column:22}},9:{start:{line:32,column:30},end:{line:32,column:49}},10:{start:{line:39,column:0},end:{line:39,column:36}}},fnMap:{0:{name:"(anonymous_0)",decl:{start:{line:10,column:29},end:{line:10,column:30}},loc:{start:{line:10,column:136},end:{line:38,column:1}},line:10},1:{name:"(anonymous_1)",decl:{start:{line:16,column:29},end:{line:16,column:30}},loc:{start:{line:16,column:38},end:{line:27,column:5}},line:16},2:{name:"(anonymous_2)",decl:{start:{line:22,column:76},end:{line:22,column:77}},loc:{start:{line:22,column:81},end:{line:22,column:92}},line:22},3:{name:"(anonymous_3)",decl:{start:{line:30,column:47},end:{line:30,column:48}},loc:{start:{line:30,column:77},end:{line:36,column:22}},line:30},4:{name:"(anonymous_4)",decl:{start:{line:32,column:26},end:{line:32,column:27}},loc:{start:{line:32,column:30},end:{line:32,column:49}},line:32}},branchMap:{0:{loc:{start:{line:10,column:42},end:{line:10,column:56}},type:"default-arg",locations:[{start:{line:10,column:54},end:{line:10,column:56}}],line:10},1:{loc:{start:{line:10,column:58},end:{line:10,column:76}},type:"default-arg",locations:[{start:{line:10,column:74},end:{line:10,column:76}}],line:10},2:{loc:{start:{line:10,column:86},end:{line:10,column:110}},type:"default-arg",locations:[{start:{line:10,column:102},end:{line:10,column:110}}],line:10},3:{loc:{start:{line:10,column:112},end:{line:10,column:131}},type:"default-arg",locations:[{start:{line:10,column:122},end:{line:10,column:131}}],line:10},4:{loc:{start:{line:17,column:8},end:{line:26,column:9}},type:"if",locations:[{start:{line:17,column:8},end:{line:26,column:9}},{start:{line:21,column:15},end:{line:26,column:9}}],line:17},5:{loc:{start:{line:18,column:27},end:{line:20,column:13}},type:"cond-expr",locations:[{start:{line:18,column:57},end:{line:18,column:59}},{start:{line:18,column:62},end:{line:20,column:13}}],line:18},6:{loc:{start:{line:22,column:27},end:{line:25,column:13}},type:"cond-expr",locations:[{start:{line:22,column:57},end:{line:22,column:93}},{start:{line:22,column:96},end:{line:25,column:13}}],line:22},7:{loc:{start:{line:29,column:35},end:{line:29,column:73}},type:"cond-expr",locations:[{start:{line:29,column:57},end:{line:29,column:68}},{start:{line:29,column:71},end:{line:29,column:73}}],line:29},8:{loc:{start:{line:30,column:77},end:{line:36,column:22}},type:"cond-expr",locations:[{start:{line:30,column:121},end:{line:36,column:14}},{start:{line:36,column:17},end:{line:36,column:22}}],line:30}},s:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0},f:{0:0,1:0,2:0,3:0,4:0},b:{0:[0],1:[0],2:[0],3:[0],4:[0,0],5:[0,0],6:[0,0],7:[0,0],8:[0,0]},inputSourceMap:{version:3,sources:["/Users/ahmadrafidev/Developer/side-projects/web/astra/components/Accordion/Accordion.tsx"],sourcesContent:["'use client'\n\nimport React, { useState, ReactNode } from 'react';\n\nimport { AccordionItemProps } from './AccordionItem';\n\n/**\n * Props for the Accordion component.\n * \n * @typedef {Object} AccordionProps\n * @property {ReactNode} children - The content of the accordion, typically AccordionItem components.\n * @property {string} [className] - Optional class name for custom styling.\n * @property {string} [itemClassName] - Optional class name for custom styling of individual accordion items.\n * @property {string} [border] - Optional border styling for accordion items.\n * @property {'single'|'multiple'} [selectionMode='single'] - The selection mode of the accordion, either 'single' or 'multiple'.\n * @property {'default'|'split'} [variant='default'] - The variant style of the accordion, either 'default' or 'split'.\n */\nexport interface AccordionProps {\n    children: ReactNode;\n    className?: string;\n    itemClassName?: string;\n    border?: string;\n    selectionMode?: 'single' | 'multiple';\n    variant?: 'default' | 'split';\n}\n\n/**\n * Accordion component for displaying collapsible content panels.\n * \n * @component\n * @param {AccordionProps} props - Props for the Accordion component.\n * @returns {JSX.Element} The rendered Accordion component.\n */\nexport const Accordion: React.FC<AccordionProps> = ({\n    children,\n    className = '',\n    itemClassName = '',\n    border,\n    selectionMode = 'single',\n    variant = 'default',\n}) => {\n    const [openIndices, setOpenIndices] = useState<number[]>([]);\n\n    /**\n     * Toggles the open state of an accordion item.\n     * \n     * @param {number} index - The index of the accordion item to toggle.\n     */\n    const handleToggle = (index: number) => {\n        if (selectionMode === 'single') {\n            setOpenIndices(openIndices.includes(index) ? [] : [index]);\n        } else {\n            setOpenIndices(\n                openIndices.includes(index)\n                    ? openIndices.filter(i => i !== index)\n                    : [...openIndices, index]\n            );\n        }\n    };\n\n    return (\n        <div className={`${className} ${variant === 'split' ? 'space-y-2' : ''}`}>\n            {React.Children.map(children, (child, index) =>\n                React.isValidElement(child)\n                    ? React.cloneElement(child as React.ReactElement<AccordionItemProps>, {\n                            isOpen: openIndices.includes(index),\n                            onToggle: () => handleToggle(index),\n                            border: border,\n                            className: itemClassName,\n                            variant: variant\n                        })\n                    : child\n            )}\n        </div>\n    );\n};\n\nAccordion.displayName = \"Accordion\";\n"],names:["React","useState","Accordion","children","className","itemClassName","border","selectionMode","variant","openIndices","setOpenIndices","handleToggle","index","includes","filter","i","div","Children","map","child","isValidElement","cloneElement","isOpen","onToggle","displayName"],mappings:"AAAA;;AAEA,OAAOA,SAASC,QAAQ,QAAmB,QAAQ;AAwBnD;;;;;;CAMC,GACD,OAAO,MAAMC,YAAsC,CAAC,EAChDC,QAAQ,EACRC,YAAY,EAAE,EACdC,gBAAgB,EAAE,EAClBC,MAAM,EACNC,gBAAgB,QAAQ,EACxBC,UAAU,SAAS,EACtB;IACG,MAAM,CAACC,aAAaC,eAAe,GAAGT,SAAmB,EAAE;IAE3D;;;;KAIC,GACD,MAAMU,eAAe,CAACC;QAClB,IAAIL,kBAAkB,UAAU;YAC5BG,eAAeD,YAAYI,QAAQ,CAACD,SAAS,EAAE,GAAG;gBAACA;aAAM;QAC7D,OAAO;YACHF,eACID,YAAYI,QAAQ,CAACD,SACfH,YAAYK,MAAM,CAACC,CAAAA,IAAKA,MAAMH,SAC9B;mBAAIH;gBAAaG;aAAM;QAErC;IACJ;IAEA,qBACI,KAACI;QAAIZ,WAAW,CAAC,EAAEA,UAAU,CAAC,EAAEI,YAAY,UAAU,cAAc,GAAG,CAAC;kBACnER,MAAMiB,QAAQ,CAACC,GAAG,CAACf,UAAU,CAACgB,OAAOP,sBAClCZ,MAAMoB,cAAc,CAACD,uBACfnB,MAAMqB,YAAY,CAACF,OAAiD;gBAC9DG,QAAQb,YAAYI,QAAQ,CAACD;gBAC7BW,UAAU,IAAMZ,aAAaC;gBAC7BN,QAAQA;gBACRF,WAAWC;gBACXG,SAASA;YACb,KACFW;;AAItB,EAAE;AAEFjB,UAAUsB,WAAW,GAAG"},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"3966b761b37ea7d795334664e320b600e9ec5f9f"});var actualCoverage=coverage[path];return cov_uvfwlklae=function(){return actualCoverage},actualCoverage}cov_uvfwlklae(),cov_uvfwlklae().s[0]++;const Accordion=({children,className=(cov_uvfwlklae().b[0][0]++,""),itemClassName=(cov_uvfwlklae().b[1][0]++,""),border,selectionMode=(cov_uvfwlklae().b[2][0]++,"single"),variant=(cov_uvfwlklae().b[3][0]++,"default")})=>{cov_uvfwlklae().f[0]++;const[openIndices,setOpenIndices]=(cov_uvfwlklae().s[1]++,(0,react.useState)([]));cov_uvfwlklae().s[2]++;return cov_uvfwlklae().s[7]++,(0,jsx_runtime.jsx)("div",{className:`${className} ${"split"===variant?(cov_uvfwlklae().b[7][0]++,"space-y-2"):(cov_uvfwlklae().b[7][1]++,"")}`,children:react.Children.map(children,((child,index)=>(cov_uvfwlklae().f[3]++,cov_uvfwlklae().s[8]++,react.isValidElement(child)?(cov_uvfwlklae().b[8][0]++,react.cloneElement(child,{isOpen:openIndices.includes(index),onToggle:()=>(cov_uvfwlklae().f[4]++,cov_uvfwlklae().s[9]++,(index=>{cov_uvfwlklae().f[1]++,cov_uvfwlklae().s[3]++,"single"===selectionMode?(cov_uvfwlklae().b[4][0]++,cov_uvfwlklae().s[4]++,setOpenIndices(openIndices.includes(index)?(cov_uvfwlklae().b[5][0]++,[]):(cov_uvfwlklae().b[5][1]++,[index]))):(cov_uvfwlklae().b[4][1]++,cov_uvfwlklae().s[5]++,setOpenIndices(openIndices.includes(index)?(cov_uvfwlklae().b[6][0]++,openIndices.filter((i=>(cov_uvfwlklae().f[2]++,cov_uvfwlklae().s[6]++,i!==index)))):(cov_uvfwlklae().b[6][1]++,[...openIndices,index])))})(index)),border,className:itemClassName,variant})):(cov_uvfwlklae().b[8][1]++,child))))})};cov_uvfwlklae().s[10]++,Accordion.displayName="Accordion";try{Accordion.displayName="Accordion",Accordion.__docgenInfo={description:"Accordion component for displaying collapsible content panels.",displayName:"Accordion",props:{className:{defaultValue:{value:""},description:"",name:"className",required:!1,type:{name:"string"}},itemClassName:{defaultValue:{value:""},description:"",name:"itemClassName",required:!1,type:{name:"string"}},border:{defaultValue:null,description:"",name:"border",required:!1,type:{name:"string"}},selectionMode:{defaultValue:{value:"single"},description:"",name:"selectionMode",required:!1,type:{name:"enum",value:[{value:'"multiple"'},{value:'"single"'}]}},variant:{defaultValue:{value:"default"},description:"",name:"variant",required:!1,type:{name:"enum",value:[{value:'"default"'},{value:'"split"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["components/Accordion/Accordion.tsx#Accordion"]={docgenInfo:Accordion.__docgenInfo,name:"Accordion",path:"components/Accordion/Accordion.tsx#Accordion"})}catch(__react_docgen_typescript_loader_error){}function ChevronUpIcon({title,titleId,...props},svgRef){return react.createElement("svg",Object.assign({xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 20 20",fill:"currentColor","aria-hidden":"true","data-slot":"icon",ref:svgRef,"aria-labelledby":titleId},props),title?react.createElement("title",{id:titleId},title):null,react.createElement("path",{fillRule:"evenodd",d:"M9.47 6.47a.75.75 0 0 1 1.06 0l4.25 4.25a.75.75 0 1 1-1.06 1.06L10 8.06l-3.72 3.72a.75.75 0 0 1-1.06-1.06l4.25-4.25Z",clipRule:"evenodd"}))}const esm_ChevronUpIcon=react.forwardRef(ChevronUpIcon);function ChevronDownIcon({title,titleId,...props},svgRef){return react.createElement("svg",Object.assign({xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 20 20",fill:"currentColor","aria-hidden":"true","data-slot":"icon",ref:svgRef,"aria-labelledby":titleId},props),title?react.createElement("title",{id:titleId},title):null,react.createElement("path",{fillRule:"evenodd",d:"M5.22 8.22a.75.75 0 0 1 1.06 0L10 11.94l3.72-3.72a.75.75 0 1 1 1.06 1.06l-4.25 4.25a.75.75 0 0 1-1.06 0L5.22 9.28a.75.75 0 0 1 0-1.06Z",clipRule:"evenodd"}))}const esm_ChevronDownIcon=react.forwardRef(ChevronDownIcon);function cov_2duw5st8sy(){var path="/Users/ahmadrafidev/Developer/side-projects/web/astra/components/Accordion/AccordionItem.tsx",global=new Function("return this")(),gcv="__coverage__",coverage=global[gcv]||(global[gcv]={});coverage[path]&&"0ec231afd50bd6e66c789a574ab6c2aed3de485c"===coverage[path].hash||(coverage[path]={path:"/Users/ahmadrafidev/Developer/side-projects/web/astra/components/Accordion/AccordionItem.tsx",statementMap:{0:{start:{line:11,column:33},end:{line:53,column:1}},1:{start:{line:12,column:24},end:{line:16,column:15}},2:{start:{line:17,column:4},end:{line:52,column:7}},3:{start:{line:54,column:0},end:{line:54,column:44}}},fnMap:{0:{name:"(anonymous_0)",decl:{start:{line:11,column:33},end:{line:11,column:34}},loc:{start:{line:11,column:154},end:{line:53,column:1}},line:11},1:{name:"(anonymous_1)",decl:{start:{line:11,column:90},end:{line:11,column:91}},loc:{start:{line:11,column:94},end:{line:11,column:96}},line:11}},branchMap:{0:{loc:{start:{line:11,column:63},end:{line:11,column:77}},type:"default-arg",locations:[{start:{line:11,column:72},end:{line:11,column:77}}],line:11},1:{loc:{start:{line:11,column:79},end:{line:11,column:96}},type:"default-arg",locations:[{start:{line:11,column:90},end:{line:11,column:96}}],line:11},2:{loc:{start:{line:11,column:114},end:{line:11,column:128}},type:"default-arg",locations:[{start:{line:11,column:126},end:{line:11,column:128}}],line:11},3:{loc:{start:{line:11,column:130},end:{line:11,column:149}},type:"default-arg",locations:[{start:{line:11,column:140},end:{line:11,column:149}}],line:11},4:{loc:{start:{line:14,column:8},end:{line:14,column:123}},type:"cond-expr",locations:[{start:{line:14,column:30},end:{line:14,column:63}},{start:{line:14,column:66},end:{line:14,column:123}}],line:14},5:{loc:{start:{line:14,column:66},end:{line:14,column:123}},type:"binary-expr",locations:[{start:{line:14,column:66},end:{line:14,column:72}},{start:{line:14,column:76},end:{line:14,column:123}}],line:14},6:{loc:{start:{line:15,column:8},end:{line:15,column:20}},type:"binary-expr",locations:[{start:{line:15,column:8},end:{line:15,column:14}},{start:{line:15,column:18},end:{line:15,column:20}}],line:15},7:{loc:{start:{line:31,column:28},end:{line:34,column:30}},type:"binary-expr",locations:[{start:{line:31,column:28},end:{line:31,column:36}},{start:{line:31,column:54},end:{line:34,column:30}}],line:31},8:{loc:{start:{line:37,column:20},end:{line:41,column:22}},type:"cond-expr",locations:[{start:{line:37,column:43},end:{line:39,column:22}},{start:{line:39,column:39},end:{line:41,column:22}}],line:37},9:{loc:{start:{line:44,column:12},end:{line:50,column:14}},type:"binary-expr",locations:[{start:{line:44,column:12},end:{line:44,column:18}},{start:{line:44,column:36},end:{line:50,column:14}}],line:44}},s:{0:0,1:0,2:0,3:0},f:{0:0,1:0},b:{0:[0],1:[0],2:[0],3:[0],4:[0,0],5:[0,0],6:[0,0],7:[0,0],8:[0,0],9:[0,0]},inputSourceMap:{version:3,sources:["/Users/ahmadrafidev/Developer/side-projects/web/astra/components/Accordion/AccordionItem.tsx"],sourcesContent:["'use client'\n\nimport React, { ReactNode } from 'react';\nimport { ChevronDownIcon, ChevronUpIcon } from '@heroicons/react/20/solid';\n\n/**\n * Props for the AccordionItem component.\n * \n * @typedef {Object} AccordionItemProps\n * @property {string} title - The title of the accordion item.\n * @property {string} [subtitle] - The subtitle of the accordion item.\n * @property {ReactNode} children - The content to display when the accordion item is open.\n * @property {boolean} [isOpen=false] - Whether the accordion item is open.\n * @property {() => void} [onToggle] - Function to call when the accordion item is toggled.\n * @property {string} [border] - Custom border styles for the accordion item.\n * @property {string} [shadow] - Custom shadow styles for the accordion item.\n * @property {string} [className] - Additional class names for the accordion item container.\n * @property {'default' | 'split'} [variant='default'] - The variant style of the accordion item.\n */\nexport interface AccordionItemProps {\n  title: string;\n  subtitle?: string;\n  children: ReactNode;\n  isOpen?: boolean;\n  onToggle?: () => void;\n  border?: string;\n  shadow?: string;\n  className?: string;\n  variant?: 'default' | 'split';\n}\n\n/**\n * AccordionItem component for rendering an individual item within an accordion.\n * \n * @component\n * @param {AccordionItemProps} props - Props for the AccordionItem component.\n * @returns {JSX.Element} The rendered AccordionItem component.\n */\nexport const AccordionItem: React.FC<AccordionItemProps> = ({\n  title,\n  subtitle,\n  children,\n  isOpen = false,\n  onToggle = () => {},\n  border,\n  shadow,\n  className = '',\n  variant = 'default',\n}) => {\n\n  const itemClasses = [\n    className,\n    variant === 'split' ? 'mb-2 rounded-lg overflow-hidden' : border || 'border-b border-gray-200 dark:border-gray-700',\n    shadow || ''\n  ].join(' ');\n\n  return (\n      <div className={itemClasses}>\n          <button\n              className=\"w-full text-left py-3 md:py-4 px-3 md:px-4 bg-gray-200/90 dark:bg-gray-800 hover:bg-gray-300 dark:hover:bg-gray-700 focus:outline-none flex justify-between items-center transition-colors duration-200\"\n              onClick={onToggle}\n          >\n              <div className=\"flex flex-col justify-start\">\n                  <h3 className=\"text-base md:text-lg font-medium text-gray-900 dark:text-gray-100\">{title}</h3>\n                  {subtitle && <h4 className=\"text-sm font-normal text-gray-700 dark:text-gray-300\">{subtitle}</h4>}\n              </div>\n              {isOpen ? (\n                  <ChevronUpIcon className=\"h-4 w-4 md:h-5 md:w-5 text-gray-900 dark:text-gray-100\" />\n              ) : (\n                  <ChevronDownIcon className=\"h-4 w-4 md:h-5 md:w-5 text-gray-900 dark:text-gray-100\" />\n              )}\n          </button>\n          {isOpen && (\n              <div className=\"p-3 md:p-4 bg-white dark:bg-gray-900\">\n                  <p className=\"text-sm md:text-base font-normal leading-loose text-gray-900 dark:text-gray-100\">\n                    {children}\n                  </p>\n              </div>\n          )}\n      </div>\n  );\n};\n\nAccordionItem.displayName = \"AccordionItem\";\n"],names:["React","ChevronDownIcon","ChevronUpIcon","AccordionItem","title","subtitle","children","isOpen","onToggle","border","shadow","className","variant","itemClasses","join","div","button","onClick","h3","h4","p","displayName"],mappings:"AAAA;;AAEA,OAAOA,WAA0B,QAAQ;AACzC,SAASC,eAAe,EAAEC,aAAa,8FAAoC;AA4B3E;;;;;;CAMC,GACD,OAAO,MAAMC,gBAA8C,CAAC,EAC1DC,KAAK,EACLC,QAAQ,EACRC,QAAQ,EACRC,SAAS,KAAK,EACdC,WAAW,KAAO,CAAC,EACnBC,MAAM,EACNC,MAAM,EACNC,YAAY,EAAE,EACdC,UAAU,SAAS,EACpB;IAEC,MAAMC,cAAc;QAClBF;QACAC,YAAY,UAAU,oCAAoCH,UAAU;QACpEC,UAAU;KACX,CAACI,IAAI,CAAC;IAEP,qBACI,MAACC;QAAIJ,WAAWE;;0BACZ,MAACG;gBACGL,WAAU;gBACVM,SAAST;;kCAET,MAACO;wBAAIJ,WAAU;;0CACX,KAACO;gCAAGP,WAAU;0CAAqEP;;4BAClFC,0BAAY,KAACc;gCAAGR,WAAU;0CAAwDN;;;;oBAEtFE,uBACG,KAACL;wBAAcS,WAAU;uCAEzB,KAACV;wBAAgBU,WAAU;;;;YAGlCJ,wBACG,KAACQ;gBAAIJ,WAAU;0BACX,cAAA,KAACS;oBAAET,WAAU;8BACVL;;;;;AAMrB,EAAE;AAEFH,cAAckB,WAAW,GAAG"},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"0ec231afd50bd6e66c789a574ab6c2aed3de485c"});var actualCoverage=coverage[path];return cov_2duw5st8sy=function(){return actualCoverage},actualCoverage}cov_2duw5st8sy(),cov_2duw5st8sy().s[0]++;const AccordionItem=({title,subtitle,children,isOpen=(cov_2duw5st8sy().b[0][0]++,!1),onToggle=(cov_2duw5st8sy().b[1][0]++,()=>{cov_2duw5st8sy().f[1]++}),border,shadow,className=(cov_2duw5st8sy().b[2][0]++,""),variant=(cov_2duw5st8sy().b[3][0]++,"default")})=>{cov_2duw5st8sy().f[0]++;const itemClasses=(cov_2duw5st8sy().s[1]++,[className,"split"===variant?(cov_2duw5st8sy().b[4][0]++,"mb-2 rounded-lg overflow-hidden"):(cov_2duw5st8sy().b[4][1]++,cov_2duw5st8sy().b[5][0]++,border||(cov_2duw5st8sy().b[5][1]++,"border-b border-gray-200 dark:border-gray-700")),(cov_2duw5st8sy().b[6][0]++,shadow||(cov_2duw5st8sy().b[6][1]++,""))].join(" "));return cov_2duw5st8sy().s[2]++,(0,jsx_runtime.jsxs)("div",{className:itemClasses,children:[(0,jsx_runtime.jsxs)("button",{className:"w-full text-left py-3 md:py-4 px-3 md:px-4 bg-gray-200/90 dark:bg-gray-800 hover:bg-gray-300 dark:hover:bg-gray-700 focus:outline-none flex justify-between items-center transition-colors duration-200",onClick:onToggle,children:[(0,jsx_runtime.jsxs)("div",{className:"flex flex-col justify-start",children:[(0,jsx_runtime.jsx)("h3",{className:"text-base md:text-lg font-medium text-gray-900 dark:text-gray-100",children:title}),(cov_2duw5st8sy().b[7][0]++,subtitle&&(cov_2duw5st8sy().b[7][1]++,(0,jsx_runtime.jsx)("h4",{className:"text-sm font-normal text-gray-700 dark:text-gray-300",children:subtitle})))]}),isOpen?(cov_2duw5st8sy().b[8][0]++,(0,jsx_runtime.jsx)(esm_ChevronUpIcon,{className:"h-4 w-4 md:h-5 md:w-5 text-gray-900 dark:text-gray-100"})):(cov_2duw5st8sy().b[8][1]++,(0,jsx_runtime.jsx)(esm_ChevronDownIcon,{className:"h-4 w-4 md:h-5 md:w-5 text-gray-900 dark:text-gray-100"}))]}),(cov_2duw5st8sy().b[9][0]++,isOpen&&(cov_2duw5st8sy().b[9][1]++,(0,jsx_runtime.jsx)("div",{className:"p-3 md:p-4 bg-white dark:bg-gray-900",children:(0,jsx_runtime.jsx)("p",{className:"text-sm md:text-base font-normal leading-loose text-gray-900 dark:text-gray-100",children})})))]})};cov_2duw5st8sy().s[3]++,AccordionItem.displayName="AccordionItem";try{AccordionItem.displayName="AccordionItem",AccordionItem.__docgenInfo={description:"AccordionItem component for rendering an individual item within an accordion.",displayName:"AccordionItem",props:{title:{defaultValue:null,description:"",name:"title",required:!0,type:{name:"string"}},subtitle:{defaultValue:null,description:"",name:"subtitle",required:!1,type:{name:"string"}},isOpen:{defaultValue:{value:"false"},description:"",name:"isOpen",required:!1,type:{name:"boolean"}},onToggle:{defaultValue:{value:"() => {}"},description:"",name:"onToggle",required:!1,type:{name:"(() => void)"}},border:{defaultValue:null,description:"",name:"border",required:!1,type:{name:"string"}},shadow:{defaultValue:null,description:"",name:"shadow",required:!1,type:{name:"string"}},className:{defaultValue:{value:""},description:"",name:"className",required:!1,type:{name:"string"}},variant:{defaultValue:{value:"default"},description:"",name:"variant",required:!1,type:{name:"enum",value:[{value:'"default"'},{value:'"split"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["components/Accordion/AccordionItem.tsx#AccordionItem"]={docgenInfo:AccordionItem.__docgenInfo,name:"AccordionItem",path:"components/Accordion/AccordionItem.tsx#AccordionItem"})}catch(__react_docgen_typescript_loader_error){}const Accordion_stories={title:"Components/Accordion",component:Accordion,argTypes:{className:{control:"text",description:"Optional class name for custom styling.",table:{type:{summary:"string"},defaultValue:{summary:""}}},itemClassName:{control:"text",description:"Optional class name for custom styling of individual accordion items.",table:{type:{summary:"string"},defaultValue:{summary:""}}},border:{control:"text",description:"Optional border styling for accordion items.",table:{type:{summary:"string"},defaultValue:{summary:""}}},selectionMode:{control:{type:"radio"},options:["single","multiple"],description:'The selection mode of the accordion, either "single" or "multiple".',table:{type:{summary:"'single' | 'multiple'"},defaultValue:{summary:"single"}}},variant:{control:{type:"radio"},options:["default","split"],description:'The variant style of the accordion, either "default" or "split".',table:{type:{summary:"'default' | 'split'"},defaultValue:{summary:"default"}}}},parameters:{docs:{description:{component:"The Accordion component is used to display collapsible content panels. It supports multiple selection modes and variant styles."}}}},Template=args=>(0,jsx_runtime.jsxs)(Accordion,{...args,children:[(0,jsx_runtime.jsx)(AccordionItem,{title:"Item 1",children:"Content for item 1"}),(0,jsx_runtime.jsx)(AccordionItem,{title:"Item 2",children:"Content for item 2"}),(0,jsx_runtime.jsx)(AccordionItem,{title:"Item 3",children:"Content for item 3"})]}),Default=Template.bind({});Default.args={selectionMode:"single",variant:"default"};const MultipleSelection=Template.bind({});MultipleSelection.args={selectionMode:"multiple",variant:"default"};const SplitVariant=Template.bind({});SplitVariant.args={selectionMode:"single",variant:"split",border:"border border-gray-300",className:"bg-gray-50",itemClassName:"p-4"};const __namedExportsOrder=["Default","MultipleSelection","SplitVariant"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'args => <Accordion {...args}>\n        <AccordionItem title="Item 1">Content for item 1</AccordionItem>\n        <AccordionItem title="Item 2">Content for item 2</AccordionItem>\n        <AccordionItem title="Item 3">Content for item 3</AccordionItem>\n    </Accordion>',...Default.parameters?.docs?.source}}},MultipleSelection.parameters={...MultipleSelection.parameters,docs:{...MultipleSelection.parameters?.docs,source:{originalSource:'args => <Accordion {...args}>\n        <AccordionItem title="Item 1">Content for item 1</AccordionItem>\n        <AccordionItem title="Item 2">Content for item 2</AccordionItem>\n        <AccordionItem title="Item 3">Content for item 3</AccordionItem>\n    </Accordion>',...MultipleSelection.parameters?.docs?.source}}},SplitVariant.parameters={...SplitVariant.parameters,docs:{...SplitVariant.parameters?.docs,source:{originalSource:'args => <Accordion {...args}>\n        <AccordionItem title="Item 1">Content for item 1</AccordionItem>\n        <AccordionItem title="Item 2">Content for item 2</AccordionItem>\n        <AccordionItem title="Item 3">Content for item 3</AccordionItem>\n    </Accordion>',...SplitVariant.parameters?.docs?.source}}}}}]);
"use strict";(self.webpackChunkastra_ui=self.webpackChunkastra_ui||[]).push([[154],{"./stories/Notification.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Error:()=>Error,Info:()=>Info,Success:()=>Success,Warning:()=>Warning,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Notification_stories});var jsx_runtime=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),react=__webpack_require__("./node_modules/next/dist/compiled/react/index.js");const notificationStyles={success:"bg-green-500",error:"bg-red-500",info:"bg-blue-500",warning:"bg-yellow-500"},Notification=param=>{let{message,type,onClose,className=""}=param;return(0,jsx_runtime.jsxs)("div",{className:"p-4 rounded ".concat(notificationStyles[type]," ").concat(className),children:[(0,jsx_runtime.jsx)("span",{children:message}),(0,jsx_runtime.jsx)("button",{onClick:onClose,className:"ml-4",children:"X"})]})},Notification_Notification=Notification;try{Notification.displayName="Notification",Notification.__docgenInfo={description:"",displayName:"Notification",props:{message:{defaultValue:null,description:"",name:"message",required:!0,type:{name:"string"}},type:{defaultValue:null,description:"",name:"type",required:!0,type:{name:"enum",value:[{value:'"success"'},{value:'"error"'},{value:'"info"'},{value:'"warning"'}]}},onClose:{defaultValue:null,description:"",name:"onClose",required:!0,type:{name:"() => void"}},className:{defaultValue:{value:""},description:"",name:"className",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["components/Notification/Notification.tsx#Notification"]={docgenInfo:Notification.__docgenInfo,name:"Notification",path:"components/Notification/Notification.tsx#Notification"})}catch(__react_docgen_typescript_loader_error){}var _Success_parameters,_Success_parameters_docs,_Success_parameters1,_Error_parameters,_Error_parameters_docs,_Error_parameters1,_Info_parameters,_Info_parameters_docs,_Info_parameters1,_Warning_parameters,_Warning_parameters_docs,_Warning_parameters1;const Notification_stories={title:"Components/Notification",component:Notification_Notification},Template=args=>{const[visible,setVisible]=(0,react.useState)(!0);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[visible&&(0,jsx_runtime.jsx)(Notification_Notification,{...args,onClose:()=>setVisible(!1)}),(0,jsx_runtime.jsx)("button",{onClick:()=>setVisible(!0),children:"Show Notification"})]})},Success=Template.bind({});Success.args={message:"This is a success message!",type:"success"};const Error=Template.bind({});Error.args={message:"This is an error message!",type:"error"};const Info=Template.bind({});Info.args={message:"This is an info message!",type:"info"};const Warning=Template.bind({});Warning.args={message:"This is a warning message!",type:"warning"},Success.parameters={...Success.parameters,docs:{...null===(_Success_parameters=Success.parameters)||void 0===_Success_parameters?void 0:_Success_parameters.docs,source:{originalSource:"args => {\n  const [visible, setVisible] = useState(true);\n  return <>\n      {visible && <Notification {...args} onClose={() => setVisible(false)} />}\n      <button onClick={() => setVisible(true)}>Show Notification</button>\n    </>;\n}",...null===(_Success_parameters1=Success.parameters)||void 0===_Success_parameters1||null===(_Success_parameters_docs=_Success_parameters1.docs)||void 0===_Success_parameters_docs?void 0:_Success_parameters_docs.source}}},Error.parameters={...Error.parameters,docs:{...null===(_Error_parameters=Error.parameters)||void 0===_Error_parameters?void 0:_Error_parameters.docs,source:{originalSource:"args => {\n  const [visible, setVisible] = useState(true);\n  return <>\n      {visible && <Notification {...args} onClose={() => setVisible(false)} />}\n      <button onClick={() => setVisible(true)}>Show Notification</button>\n    </>;\n}",...null===(_Error_parameters1=Error.parameters)||void 0===_Error_parameters1||null===(_Error_parameters_docs=_Error_parameters1.docs)||void 0===_Error_parameters_docs?void 0:_Error_parameters_docs.source}}},Info.parameters={...Info.parameters,docs:{...null===(_Info_parameters=Info.parameters)||void 0===_Info_parameters?void 0:_Info_parameters.docs,source:{originalSource:"args => {\n  const [visible, setVisible] = useState(true);\n  return <>\n      {visible && <Notification {...args} onClose={() => setVisible(false)} />}\n      <button onClick={() => setVisible(true)}>Show Notification</button>\n    </>;\n}",...null===(_Info_parameters1=Info.parameters)||void 0===_Info_parameters1||null===(_Info_parameters_docs=_Info_parameters1.docs)||void 0===_Info_parameters_docs?void 0:_Info_parameters_docs.source}}},Warning.parameters={...Warning.parameters,docs:{...null===(_Warning_parameters=Warning.parameters)||void 0===_Warning_parameters?void 0:_Warning_parameters.docs,source:{originalSource:"args => {\n  const [visible, setVisible] = useState(true);\n  return <>\n      {visible && <Notification {...args} onClose={() => setVisible(false)} />}\n      <button onClick={() => setVisible(true)}>Show Notification</button>\n    </>;\n}",...null===(_Warning_parameters1=Warning.parameters)||void 0===_Warning_parameters1||null===(_Warning_parameters_docs=_Warning_parameters1.docs)||void 0===_Warning_parameters_docs?void 0:_Warning_parameters_docs.source}}};const __namedExportsOrder=["Success","Error","Info","Warning"]}}]);
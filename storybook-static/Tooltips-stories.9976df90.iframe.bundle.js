"use strict";(self.webpackChunkastra_ui=self.webpackChunkastra_ui||[]).push([[159],{"./components/Tooltip/Tooltip.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/.pnpm/next@14.2.5_@babel+core@7.24.9_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/react/jsx-runtime.js"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/.pnpm/next@14.2.5_@babel+core@7.24.9_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/react/index.js");function cov_252eji79j1(){var path="/Users/ahmadrafidev/Developer/side-projects/web/astra/components/Tooltip/Tooltip.tsx",global=new Function("return this")(),gcv="__coverage__",coverage=global[gcv]||(global[gcv]={});coverage[path]&&"78f0e2c915478ffe2cb33de921601c4d824b7d49"===coverage[path].hash||(coverage[path]={path:"/Users/ahmadrafidev/Developer/side-projects/web/astra/components/Tooltip/Tooltip.tsx",statementMap:{0:{start:{line:9,column:20},end:{line:52,column:1}},1:{start:{line:10,column:34},end:{line:10,column:49}},2:{start:{line:11,column:31},end:{line:15,column:3}},3:{start:{line:16,column:27},end:{line:30,column:5}},4:{start:{line:31,column:27},end:{line:35,column:3}},5:{start:{line:36,column:4},end:{line:51,column:7}},6:{start:{line:38,column:26},end:{line:38,column:42}},7:{start:{line:39,column:26},end:{line:39,column:43}},8:{start:{line:40,column:21},end:{line:40,column:37}},9:{start:{line:41,column:20},end:{line:41,column:37}},10:{start:{line:53,column:0},end:{line:53,column:32}}},fnMap:{0:{name:"(anonymous_0)",decl:{start:{line:9,column:20},end:{line:9,column:21}},loc:{start:{line:9,column:84},end:{line:52,column:1}},line:9},1:{name:"(anonymous_1)",decl:{start:{line:38,column:22},end:{line:38,column:23}},loc:{start:{line:38,column:26},end:{line:38,column:42}},line:38},2:{name:"(anonymous_2)",decl:{start:{line:39,column:22},end:{line:39,column:23}},loc:{start:{line:39,column:26},end:{line:39,column:43}},line:39},3:{name:"(anonymous_3)",decl:{start:{line:40,column:17},end:{line:40,column:18}},loc:{start:{line:40,column:21},end:{line:40,column:37}},line:40},4:{name:"(anonymous_4)",decl:{start:{line:41,column:16},end:{line:41,column:17}},loc:{start:{line:41,column:20},end:{line:41,column:37}},line:41}},branchMap:{0:{loc:{start:{line:9,column:50},end:{line:9,column:69}},type:"default-arg",locations:[{start:{line:9,column:60},end:{line:9,column:69}}],line:9},1:{loc:{start:{line:34,column:6},end:{line:34,column:63}},type:"cond-expr",locations:[{start:{line:34,column:16},end:{line:34,column:29}},{start:{line:34,column:32},end:{line:34,column:63}}],line:34}},s:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0},f:{0:0,1:0,2:0,3:0,4:0},b:{0:[0],1:[0,0]},inputSourceMap:{version:3,sources:["/Users/ahmadrafidev/Developer/side-projects/web/astra/components/Tooltip/Tooltip.tsx"],sourcesContent:["import React, { useState } from 'react';\n\n/**\n * Props for the Tooltip component.\n * \n * @typedef {Object} TooltipProps\n * @property {React.ReactNode} children - The content around which the tooltip will appear.\n * @property {string} text - The text to be displayed inside the tooltip.\n * @property {string} [className] - Additional class names for custom styling of the tooltip container.\n* @property {'default' | 'arrow-bottom' | 'arrow-top'} [variant='default'] - The variant style of the tooltip, such as with or without an arrow.\n */\nexport interface TooltipProps {\n  children: React.ReactNode;\n  text: string;\n  className?: string;\n  variant?: 'default' | 'arrow-bottom' | 'arrow-top';\n}\n\n/**\n * Tooltip component for displaying a tooltip with text when hovering or focusing on an element.\n * \n * @component\n * @param {TooltipProps} props - Props for the Tooltip component.\n * @returns {JSX.Element} The rendered Tooltip component.\n */\nconst Tooltip: React.FC<TooltipProps> = ({\n  children,\n  text,\n  className,\n  variant = 'default',\n  ...props\n}) => {\n  const [visible, setVisible] = useState(false);\n\n  const baseTooltipClasses = `\n    absolute left-1/2 -translate-x-1/2 z-10 px-3 py-2 text-sm font-medium \n    text-white bg-gray-800 rounded-lg shadow-sm whitespace-nowrap\n    transition-opacity duration-300\n  `;\n\n  const variantClasses = {\n    default: 'bottom-full mb-2',\n    'arrow-bottom': `\n      top-full mt-2\n      before:content-[''] before:absolute before:left-1/2 before:-translate-x-1/2\n      before:bottom-full before:border-8 before:border-x-transparent\n      before:border-t-transparent before:border-b-gray-700\n    `,\n    'arrow-top': `\n      bottom-full mb-2\n      after:content-[''] after:absolute after:left-1/2 after:-translate-x-1/2\n      after:top-full after:border-8 after:border-x-transparent\n      after:border-b-transparent after:border-t-gray-800\n    `\n  };\n\n  const tooltipClasses = `\n    ${baseTooltipClasses}\n    ${variantClasses[variant]}\n    ${visible ? 'opacity-100' : 'opacity-0 pointer-events-none'}\n  `;\n\n  return (\n    <div\n      className={`relative inline-block ${className}`}\n      onMouseEnter={() => setVisible(true)}\n      onMouseLeave={() => setVisible(false)}\n      onFocus={() => setVisible(true)}\n      onBlur={() => setVisible(false)}\n      {...props}\n    >\n      {children}\n      <div\n        role=\"tooltip\"\n        className={tooltipClasses}\n      >\n        {text}\n      </div>\n    </div>\n  );\n};\n\nTooltip.displayName = \"Tooltip\";\nexport default Tooltip;\n"],names:["React","useState","Tooltip","children","text","className","variant","props","visible","setVisible","baseTooltipClasses","variantClasses","default","tooltipClasses","div","onMouseEnter","onMouseLeave","onFocus","onBlur","role","displayName"],mappings:";AAAA,OAAOA,SAASC,QAAQ,QAAQ,QAAQ;AAkBxC;;;;;;CAMC,GACD,MAAMC,UAAkC,CAAC,EACvCC,QAAQ,EACRC,IAAI,EACJC,SAAS,EACTC,UAAU,SAAS,EACnB,GAAGC,OACJ;IACC,MAAM,CAACC,SAASC,WAAW,GAAGR,SAAS;IAEvC,MAAMS,qBAAqB,CAAC;;;;EAI5B,CAAC;IAED,MAAMC,iBAAiB;QACrBC,SAAS;QACT,gBAAgB,CAAC;;;;;IAKjB,CAAC;QACD,aAAa,CAAC;;;;;IAKd,CAAC;IACH;IAEA,MAAMC,iBAAiB,CAAC;IACtB,EAAEH,mBAAmB;IACrB,EAAEC,cAAc,CAACL,QAAQ,CAAC;IAC1B,EAAEE,UAAU,gBAAgB,gCAAgC;EAC9D,CAAC;IAED,qBACE,MAACM;QACCT,WAAW,CAAC,sBAAsB,EAAEA,UAAU,CAAC;QAC/CU,cAAc,IAAMN,WAAW;QAC/BO,cAAc,IAAMP,WAAW;QAC/BQ,SAAS,IAAMR,WAAW;QAC1BS,QAAQ,IAAMT,WAAW;QACxB,GAAGF,KAAK;;YAERJ;0BACD,KAACW;gBACCK,MAAK;gBACLd,WAAWQ;0BAEVT;;;;AAIT;AAEAF,QAAQkB,WAAW,GAAG;AACtB,eAAelB,QAAQ"},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"78f0e2c915478ffe2cb33de921601c4d824b7d49"});var actualCoverage=coverage[path];return cov_252eji79j1=function(){return actualCoverage},actualCoverage}cov_252eji79j1(),cov_252eji79j1().s[0]++;const Tooltip=({children,text,className,variant=(cov_252eji79j1().b[0][0]++,"default"),...props})=>{cov_252eji79j1().f[0]++;const[visible,setVisible]=(cov_252eji79j1().s[1]++,(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!1)),baseTooltipClasses=(cov_252eji79j1().s[2]++,"\n    absolute left-1/2 -translate-x-1/2 z-10 px-3 py-2 text-sm font-medium \n    text-white bg-gray-800 rounded-lg shadow-sm whitespace-nowrap\n    transition-opacity duration-300\n  "),variantClasses=(cov_252eji79j1().s[3]++,{default:"bottom-full mb-2","arrow-bottom":"\n      top-full mt-2\n      before:content-[''] before:absolute before:left-1/2 before:-translate-x-1/2\n      before:bottom-full before:border-8 before:border-x-transparent\n      before:border-t-transparent before:border-b-gray-700\n    ","arrow-top":"\n      bottom-full mb-2\n      after:content-[''] after:absolute after:left-1/2 after:-translate-x-1/2\n      after:top-full after:border-8 after:border-x-transparent\n      after:border-b-transparent after:border-t-gray-800\n    "}),tooltipClasses=(cov_252eji79j1().s[4]++,`\n    ${baseTooltipClasses}\n    ${variantClasses[variant]}\n    ${visible?(cov_252eji79j1().b[1][0]++,"opacity-100"):(cov_252eji79j1().b[1][1]++,"opacity-0 pointer-events-none")}\n  `);return cov_252eji79j1().s[5]++,(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:`relative inline-block ${className}`,onMouseEnter:()=>(cov_252eji79j1().f[1]++,cov_252eji79j1().s[6]++,setVisible(!0)),onMouseLeave:()=>(cov_252eji79j1().f[2]++,cov_252eji79j1().s[7]++,setVisible(!1)),onFocus:()=>(cov_252eji79j1().f[3]++,cov_252eji79j1().s[8]++,setVisible(!0)),onBlur:()=>(cov_252eji79j1().f[4]++,cov_252eji79j1().s[9]++,setVisible(!1)),...props,children:[children,(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{role:"tooltip",className:tooltipClasses,children:text})]})};cov_252eji79j1().s[10]++,Tooltip.displayName="Tooltip";const __WEBPACK_DEFAULT_EXPORT__=Tooltip;try{Tooltip.displayName="Tooltip",Tooltip.__docgenInfo={description:"Tooltip component for displaying a tooltip with text when hovering or focusing on an element.",displayName:"Tooltip",props:{text:{defaultValue:null,description:"",name:"text",required:!0,type:{name:"string"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},variant:{defaultValue:{value:"default"},description:"",name:"variant",required:!1,type:{name:"enum",value:[{value:'"default"'},{value:'"arrow-bottom"'},{value:'"arrow-top"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["components/Tooltip/Tooltip.tsx#Tooltip"]={docgenInfo:Tooltip.__docgenInfo,name:"Tooltip",path:"components/Tooltip/Tooltip.tsx#Tooltip"})}catch(__react_docgen_typescript_loader_error){}},"./stories/Tooltips.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ArrowBottomVariant:()=>ArrowBottomVariant,ArrowTopVariant:()=>ArrowTopVariant,CustomClass:()=>CustomClass,Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/.pnpm/next@14.2.5_@babel+core@7.24.9_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/react/jsx-runtime.js"),_components_Tooltip_Tooltip__WEBPACK_IMPORTED_MODULE_2__=(__webpack_require__("./node_modules/.pnpm/next@14.2.5_@babel+core@7.24.9_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/react/index.js"),__webpack_require__("./components/Tooltip/Tooltip.tsx"));const __WEBPACK_DEFAULT_EXPORT__={title:"Components/Tooltip",component:_components_Tooltip_Tooltip__WEBPACK_IMPORTED_MODULE_2__.A,argTypes:{text:{control:"text",description:"The text to be displayed inside the tooltip.",table:{type:{summary:"string"},defaultValue:{summary:""}}},className:{control:"text",description:"Additional class names for custom styling.",table:{type:{summary:"string"}}},variant:{control:{type:"select",options:["default","arrow"]},description:"The variant style of the tooltip.",table:{type:{summary:"'default' | 'arrow'"},defaultValue:{summary:"default"}}}}},Template=args=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components_Tooltip_Tooltip__WEBPACK_IMPORTED_MODULE_2__.A,{...args,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("button",{className:"p-2 bg-blue-500 text-white rounded-md",children:"Hover me"})}),Default=Template.bind({});Default.args={text:"This is a tooltip",variant:"default"};const ArrowBottomVariant=Template.bind({});ArrowBottomVariant.args={text:"This tooltip has a bottom arrow",variant:"arrow-bottom"};const ArrowTopVariant=Template.bind({});ArrowTopVariant.args={text:"This tooltip has a top arrow",variant:"arrow-top"};const CustomClass=Template.bind({});CustomClass.args={text:"This tooltip is custom styled",className:"text-red-500 bg-yellow-300",variant:"default"};const __namedExportsOrder=["Default","ArrowBottomVariant","ArrowTopVariant","CustomClass"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'args => <Tooltip {...args}>\n        <button className="p-2 bg-blue-500 text-white rounded-md">\n            Hover me\n        </button>\n    </Tooltip>',...Default.parameters?.docs?.source}}},ArrowBottomVariant.parameters={...ArrowBottomVariant.parameters,docs:{...ArrowBottomVariant.parameters?.docs,source:{originalSource:'args => <Tooltip {...args}>\n        <button className="p-2 bg-blue-500 text-white rounded-md">\n            Hover me\n        </button>\n    </Tooltip>',...ArrowBottomVariant.parameters?.docs?.source}}},ArrowTopVariant.parameters={...ArrowTopVariant.parameters,docs:{...ArrowTopVariant.parameters?.docs,source:{originalSource:'args => <Tooltip {...args}>\n        <button className="p-2 bg-blue-500 text-white rounded-md">\n            Hover me\n        </button>\n    </Tooltip>',...ArrowTopVariant.parameters?.docs?.source}}},CustomClass.parameters={...CustomClass.parameters,docs:{...CustomClass.parameters?.docs,source:{originalSource:'args => <Tooltip {...args}>\n        <button className="p-2 bg-blue-500 text-white rounded-md">\n            Hover me\n        </button>\n    </Tooltip>',...CustomClass.parameters?.docs?.source}}}}}]);
"use strict";(self.webpackChunkastra_ui=self.webpackChunkastra_ui||[]).push([[258],{"./stories/Modal.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Modal_stories});var jsx_runtime=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),react=__webpack_require__("./node_modules/next/dist/compiled/react/index.js");const Modal=param=>{let{isOpen,onClose,children,className=""}=param;return isOpen?(0,jsx_runtime.jsx)("div",{className:"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50",children:(0,jsx_runtime.jsxs)("div",{className:"bg-white p-6 rounded ".concat(className),children:[(0,jsx_runtime.jsx)("button",{onClick:onClose,className:"absolute top-0 right-0 p-2",children:"X"}),children]})}):null},Modal_Modal=Modal;try{Modal.displayName="Modal",Modal.__docgenInfo={description:"",displayName:"Modal",props:{isOpen:{defaultValue:null,description:"",name:"isOpen",required:!0,type:{name:"boolean"}},onClose:{defaultValue:null,description:"",name:"onClose",required:!0,type:{name:"() => void"}},className:{defaultValue:{value:""},description:"",name:"className",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["components/Modal/Modal.tsx#Modal"]={docgenInfo:Modal.__docgenInfo,name:"Modal",path:"components/Modal/Modal.tsx#Modal"})}catch(__react_docgen_typescript_loader_error){}var _Default_parameters,_Default_parameters_docs,_Default_parameters1;const Modal_stories={title:"Components/Modal",component:Modal_Modal},Default=(args=>{const[isOpen,setIsOpen]=(0,react.useState)(!1);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)("button",{onClick:()=>setIsOpen(!0),children:"Open Modal"}),(0,jsx_runtime.jsx)(Modal_Modal,{...args,isOpen,onClose:()=>setIsOpen(!1),children:(0,jsx_runtime.jsx)("p",{children:"This is a modal content"})})]})}).bind({});Default.args={isOpen:!1},Default.parameters={...Default.parameters,docs:{...null===(_Default_parameters=Default.parameters)||void 0===_Default_parameters?void 0:_Default_parameters.docs,source:{originalSource:"args => {\n  const [isOpen, setIsOpen] = useState(false);\n  return <>\n            <button onClick={() => setIsOpen(true)}>Open Modal</button>\n            <Modal {...args} isOpen={isOpen} onClose={() => setIsOpen(false)}>\n            <p>This is a modal content</p>\n            </Modal>\n        </>;\n}",...null===(_Default_parameters1=Default.parameters)||void 0===_Default_parameters1||null===(_Default_parameters_docs=_Default_parameters1.docs)||void 0===_Default_parameters_docs?void 0:_Default_parameters_docs.source}}};const __namedExportsOrder=["Default"]}}]);